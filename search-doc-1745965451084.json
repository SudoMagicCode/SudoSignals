{"searchDocs":[{"title":"Getting Started","type":0,"sectionRef":"#","url":"/v1/getting-started","content":"Getting Started sudoSignals is an application monitor that's connected to a web dashboard. üìÑÔ∏è Create an Account An overview of creating your sudoSignals Account üìÑÔ∏è Install Signals A step-by-step guide through installing sudoSignals üìÑÔ∏è Create an Installation A step-by-step guide through creating your first installation üóÉÔ∏è Configure an Installation 1 item üóÉÔ∏è View Installations 5 items üìÑÔ∏è Remote Control Remotely controlling your installations with sudoSignals","keywords":"","version":"Next"},{"title":"Plugin API","type":0,"sectionRef":"#","url":"/v1/api","content":"Plugin API Plugins use an API for communicating with the local sudoSignals client. While there are some existing plugins for sudoSignals, you're welcome to develop your own tools to better suite your organizations' needs. sudoSignals has an open websocket API for controlling and reporting on process behavior. The local sudoSignals client is responsible for starting processes on the local server, reporting system diagnostic information, and relaying information and control settings between the dashboard and the plugins embedded in the monitored processes. üìÑÔ∏è Service API Service API reference","keywords":"","version":"Next"},{"title":"sudoSignals","type":0,"sectionRef":"#","url":"/v1","content":"","keywords":"","version":"Next"},{"title":"What is this resource?‚Äã","type":1,"pageTitle":"sudoSignals","url":"/v1#what-is-this-resource","content":" This resource is the single source documentation guide for working with the sudoSignals local application, with the web Dashboard, with any SudoMagic created plugins, and with the Signals API (helpful if you're going to create your own plugin).  ","version":"Next","tagName":"h2"},{"title":"Where to go next:‚Äã","type":1,"pageTitle":"sudoSignals","url":"/v1#where-to-go-next","content":" Getting Started - create an account, install sudoSignals, and configuration Working with Plugins - working with plugins to remotely control your installation Troubleshooting - common issues, and their resolution API Documentation - build your own sudoSignals plugin ","version":"Next","tagName":"h2"},{"title":"Configure an Installation","type":0,"sectionRef":"#","url":"/v1/getting-started/configure-an-installation","content":"","keywords":"","version":"Next"},{"title":"Open the Dashboard‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#open-the-dashboard","content":" With an installation created, we can now configure how we'd like Signals to manage this machine. To get started, let's make sure that you have the Dashboard open in your browser ‚Äî dashboard.sudosignals.com    ","version":"Next","tagName":"h2"},{"title":"Start sudoSignals‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#start-sudosignals","content":" To configure the installation we'll also need sudoSignals running. From the shortcut on your desktop or from the start menu, start sudoSignals.  ","version":"Next","tagName":"h2"},{"title":"Configure from System Tray‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#configure-from-system-tray","content":" Locate the sudoSignals icon in the system tray.  Right click on the system tray icon and select Configuration.    Alternatively, you can go to this page on your browser: https://dashboard.sudosignals.com/client  info While we use a webform to capture the configuration data, this page communicates directly with the sudoSignals service to create a configuration YAML file.  ","version":"Next","tagName":"h2"},{"title":"Assign an Installation‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#assign-an-installation","content":" On the Client Configuration page we can assign an installation by selecting the Assign Installation tab.  Assigning an installation will connect the sudoSignals dashboard to your local machine, this configuration step allows the sudoSignals client to communicate to the cloud about this specific computer resource.  From the Select an Installation drop down, select which installation you'd like to assign to this computer. This process associates a Signals installation with your machine.    Once you've selected the installation to assign, click Update and this will update the configuration YAML file and restart Signals on your computer.    info Look for the green notification on the Client Configuration page to confirm that Signals has successfully updated its configuration.  ","version":"Next","tagName":"h2"},{"title":"Monitor Your Machine‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#monitor-your-machine","content":" If you only need to know if your installation machine is online, you can click the View Installation button, to be taken directly to the dashboard to start monitoring your computer.    ","version":"Next","tagName":"h2"},{"title":"Configure a Process‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#configure-a-process","content":" See the complete walkthrough on how to Configure a Process.  ","version":"Next","tagName":"h2"},{"title":"Configure Additional Processes (optional)‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#configure-additional-processes-optional","content":" sudoSignals can launch as many processes as your installation requires. Repeat this process as many times as you need to configure your installation.  ","version":"Next","tagName":"h2"},{"title":"Update‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#update","content":" Now that we've gotten our installation configured, we can click Update in the bottom right hand corner of the Client Configuration page. This will restart Signals, and in turn start any applications you've specified in your installation's configuration.    Dont' forget to Update It's important that you click Update so that your process settings will be saved to the sudoSignals configuration file. If you do not click Update you will need to repeat the configuration process.  ","version":"Next","tagName":"h2"},{"title":"Head to the Dashboard‚Äã","type":1,"pageTitle":"Configure an Installation","url":"/v1/getting-started/configure-an-installation#head-to-the-dashboard","content":" Back on the Dashboard you should now see that Signals is online.   ","version":"Next","tagName":"h2"},{"title":"Configure a Process","type":0,"sectionRef":"#","url":"/v1/getting-started/configure-an-installation/configure-a-process","content":"","keywords":"","version":"Next"},{"title":"Create a New Process‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#create-a-new-process","content":" To create a new process, begin by clicking on Create new Process.    info You can open and close all of the parameters for a process by using the small carrot to the left of the process name.  ","version":"Next","tagName":"h2"},{"title":"Assign a Signals Name‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#assign-a-signals-name","content":" The SIGNALS_NAME is the unique name you'd like to associate with your process. You might choose to name this after the tookit you're using, or based on the work a given application is responsible for doing.  danger It is important that this name is unique. Each process managed by Signals should have a unique name.    If you're developing your own plugin, the process-id will be used by your application when communicating with signals.  ","version":"Next","tagName":"h2"},{"title":"Specify a File to Open (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#specify-a-file-to-open-optional","content":" If you'd like to specify that sudoSignals open an application or file, toggle the Auto Start so that is enabled.    After doing this you can specify which file or application you'd like sudoSignals to open. To locate a file click the Browse button.  If you have a lot of windows open on your desktop, the file dialog may be hidden. Check your taskbar to find the sudoSignals logo and bring the file dialog to the foreground.    This will open a file dialog that you can use to locate your file or application.    ","version":"Next","tagName":"h2"},{"title":"Specify an Application (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#specify-an-application-optional","content":" If you've selected a file type that's opened by another application (like .toe, .unity, etc), sudoSignals will attempt to find programs registered with Windows that can open that file. You can select the application from the drop down list, or select Other to manually navigate to the program you want to use.    Selecting a program is an optional field. If you have a built executable you'd like to open, Signals will just open that .exe.  However, you can also specify which program you'd like your file to be opened with. When using something like TouchDesigner this can be helpful - especially if you have multiple versions of the software installed.  If you do have multiple versions of an application installed, make sure that the correct version has been selected for your file.    Unreal Engine If you're working with an executable built in Unreal Engine, you may need to take a few extra steps in your configuration. The .exe built by Unreal sometimes uses a process starter that runs another executable. Be sure that you're targeting the correct .exe when using Signals to be able to faithfully stop and start your process.  ","version":"Next","tagName":"h2"},{"title":"Auto Restart (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#auto-restart-optional","content":" sudoSignals can monitor applications and keep them alive if they quit unexpectedly. To enable Auto Restarting for your process, toggle on the Auto Restart feature in the Process configuration.  To have Signals keep the application always running, leave the Restart Limit set to 0. If you only want Signals to restart an application a specific number of times, enter that number in the Restart Limit field.    info If you don't want your application to restart infinitely, then specify a Restart Limit value that is greater than 0 so that Signals only restarts the application a fixed number of times.  ","version":"Next","tagName":"h2"},{"title":"Advanced Options (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#advanced-options-optional","content":" Some installations require extra care during start-up and sudoSignals has some advanced features to help ensure everything runs smoothly. To see the advanced Process options expand the Advanced Options carrot.    ","version":"Next","tagName":"h2"},{"title":"Preview Command Line (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#preview-command-line-optional","content":" The Preview Command Line field displays the equivalent command string that will be used to start your process. If your familiar with starting applications from the Windows terminal reviewing this command may help ensure that your application starts up correctly.    ","version":"Next","tagName":"h2"},{"title":"Environment Variables (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v1/getting-started/configure-an-installation/configure-a-process#environment-variables-optional","content":" Many applications or environments can access Environment Variables that are set during application launch. You can add as many Environment Variables as is appropriate for your application. Use the Add environment variable button to enter the key and value pair you'd like to have set when your process starts.   ","version":"Next","tagName":"h2"},{"title":"Create Your sudoSignals Account","type":0,"sectionRef":"#","url":"/v1/getting-started/create-an-account","content":"","keywords":"","version":"Next"},{"title":"Open your Browser‚Äã","type":1,"pageTitle":"Create Your sudoSignals Account","url":"/v1/getting-started/create-an-account#open-your-browser","content":" In your browser head to dashboard.sudosignals.com. You should see a page that looks like:    ","version":"Next","tagName":"h2"},{"title":"Create Your Account‚Äã","type":1,"pageTitle":"Create Your sudoSignals Account","url":"/v1/getting-started/create-an-account#create-your-account","content":" Click the link to sign up at the bottom of the form.  Next you'll see a page to enter your email address, name, and create a password.    ","version":"Next","tagName":"h2"},{"title":"Verify Your Email‚Äã","type":1,"pageTitle":"Create Your sudoSignals Account","url":"/v1/getting-started/create-an-account#verify-your-email","content":" After clicking Sign up you'll be prompted to verify your email.  Check your inbox for an email from sudoSignals to verify your email address.    Finally, click the link to confirm your account.    ","version":"Next","tagName":"h2"},{"title":"Login to the Dashboard‚Äã","type":1,"pageTitle":"Create Your sudoSignals Account","url":"/v1/getting-started/create-an-account#login-to-the-dashboard","content":" You should now be able to log in on the sudoSignals dashboard.   ","version":"Next","tagName":"h2"},{"title":"Create an Installation","type":0,"sectionRef":"#","url":"/v1/getting-started/create-an-installation","content":"","keywords":"","version":"Next"},{"title":"Open the sudoSignals Dashboard‚Äã","type":1,"pageTitle":"Create an Installation","url":"/v1/getting-started/create-an-installation#open-the-sudosignals-dashboard","content":" Start by heading to the sudoSignals dashboard at dashboard.sudosignals.com  ","version":"Next","tagName":"h2"},{"title":"Create an Installation‚Äã","type":1,"pageTitle":"Create an Installation","url":"/v1/getting-started/create-an-installation#create-an-installation-1","content":" If you're creating your first installation you can click Create Installation.    If you already have an installation, and want to add another click the plus icon in the upper right to create a new installation.    ","version":"Next","tagName":"h2"},{"title":"Name Your Installation‚Äã","type":1,"pageTitle":"Create an Installation","url":"/v1/getting-started/create-an-installation#name-your-installation","content":" When the Create New Installation dialogue opens you can enter a descriptive name for your installation and the click Create It.      After creating your installation, you'll be directed back to your dashboard where you can see a card with all of the at-a-glance details for your installation.    Congratulations, you've created your first sudoSignals installation.  Your first installation is free, and you can create as many installations as you need for the projects you need to monitor. ","version":"Next","tagName":"h2"},{"title":"Controlling a Remote Installation","type":0,"sectionRef":"#","url":"/v1/getting-started/remote-control","content":"Controlling a Remote Installation In addition to process monitoring, sudoSignals can also be used to remotely control your application. Remote operation requires that an application use a plugin to communicate directly with the Signals client, which will act as a bridge to the Dashboard. SudoMagic has a starting set of open source plugins available for projects, with plans to continue development for additional platforms. You can see a list of all officially supported plugins here. If you'd like to build your own plugin please review the documentation for the sudoSignals service API.","keywords":"","version":"Next"},{"title":"Installing sudoSignals","type":0,"sectionRef":"#","url":"/v1/getting-started/installing-sudoSignals","content":"","keywords":"","version":"Next"},{"title":"Download sudoSignals‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#download-sudosignals","content":" Here is the latest sudoSignals installer.  Versioning You should always use a sudoSignals client whose system version matches the major and minor version for the dashboard. For example, the client 1.0.1 is compatible with a dashboard 1.0.5; however a client with a version 1.1.1 would not be compatible with a dashboard 1.0.5. Versioning follows the pattern major.minor.patch - e.g. 1.0.1  ","version":"Next","tagName":"h2"},{"title":"Run the Installer‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#run-the-installer","content":" After downloading the installer, it's time to get sudoSignals up and running. Start by double clicking the installer.  ","version":"Next","tagName":"h2"},{"title":"Windows Protection‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#windows-protection","content":" caution We're working on getting our Windows application publisher certificate. In the meantime, there's an extra step to getting the installer working.  You should see a warning from Windows about an application from an unknown publisher.    First click the link for More info, and then click Run anyway    ","version":"Next","tagName":"h3"},{"title":"Welcome‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#welcome","content":" You should then see the Welcome window of the Setup Wizard; begin the installation process by clicking Next.    ","version":"Next","tagName":"h3"},{"title":"Accept the EULA‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#accept-the-eula","content":" Signals has an end user licensing agreement, mark that you accept the agreement and then click Next.    ","version":"Next","tagName":"h3"},{"title":"Select Installation Location‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#select-installation-location","content":" By default sudoSignals is installed in Program Files(x86)\\SudoSignals    ","version":"Next","tagName":"h3"},{"title":"Additional Settings‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#additional-settings","content":" There are some additional settings you can adjust when installing sudoSignals.   sudoSignals Client is the control software that's required with this installation Create a desktop shortcut (optional) Remove beta config files - if you were a beta tester it is important to check this box Remove old configuration files - if you're installing a major Signals release this is an important box to check    ","version":"Next","tagName":"h3"},{"title":"Install‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#install","content":" Review the installer's settings and if everything looks correct, you can begin the installation process by clicking Install.    ","version":"Next","tagName":"h3"},{"title":"Finish‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#finish","content":" You can complete the Setup Wizard by clicking Finish. By default sudoSignals is configured to launch when installation is complete.    ","version":"Next","tagName":"h3"},{"title":"Finding Signals‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v1/getting-started/installing-sudoSignals#finding-signals","content":" If you've selected the Create a desktop shortcut option during setup, you can find a shortcut to sudoSignals on your desktop. You can also find Signals in the start menu.  sudoSignals also includes a system tray icon. When sudoSignals is running you should see a system tray icon.   ","version":"Next","tagName":"h2"},{"title":"Viewing Your Installation Stats","type":0,"sectionRef":"#","url":"/v1/getting-started/view-installations","content":"","keywords":"","version":"Next"},{"title":"Installation Card View‚Äã","type":1,"pageTitle":"Viewing Your Installation Stats","url":"/v1/getting-started/view-installations#installation-card-view","content":" From the Card view you can see which installations are online, and their update and CPU Utilization statuses at a glance.  Clicking on your installation card will take you to the stats and control page for your installation. Where you can see additional details.      üìÑÔ∏è Dashboard An overview of the features on the Dashboard üìÑÔ∏è System Info An overview of the features on the system info view on the Dashboard üìÑÔ∏è Logs An overview of the Logs on the Dashboard üìÑÔ∏è Alerts An overview of Alerts on the Dashboard. üìÑÔ∏è Installation Settings Installation settings configureation. ","version":"Next","tagName":"h2"},{"title":"Alerts","type":0,"sectionRef":"#","url":"/v1/getting-started/view-installations/alerts","content":"Alerts sudoSignals can alert you via email or SMS when there are critical issues with your installation. Signals can be configured to send an alert when: Your installation goes offline. This may be due to a power outage, a compute restart, or an interruption in internet connectivityYour process goes offline. It's often valuable to know if your application has crashed, and sudoSignals can alert you if this happens. info When sudoSignals is set to Auto Restart your process, it will restart your application even if it crashes. When process alerts are enabled, you may still get a notification that your process has fallen offline so that you can investigate at your earliest convenience.","keywords":"","version":"Next"},{"title":"Dashboard","type":0,"sectionRef":"#","url":"/v1/getting-started/view-installations/dashboard","content":"","keywords":"","version":"Next"},{"title":"Processes‚Äã","type":1,"pageTitle":"Dashboard","url":"/v1/getting-started/view-installations/dashboard#processes","content":" The Processes view is a tiled section of all the processes that are communicating with the sudoSignals client on your installation machine. Installations information includes:  Process NameConnection StateSoftware &amp; Software VersionThe number of restarts the process has experienced  Each process is represented as a small rectangular tile below the Start and Stop buttons. The Start All Processes and Stop All Processes buttons can be used to start or stop all Processes that sudoSignals is configured to Auto Start. This gives you the ability to remotely startup or shutdown the applications that are controlled by sudoSignals.  ","version":"Next","tagName":"h2"},{"title":"Controls‚Äã","type":1,"pageTitle":"Dashboard","url":"/v1/getting-started/view-installations/dashboard#controls","content":" Controls can be accessed by using one of the SudoMagic developed plugins, or by building your own controls by following the sudoSignals client API. Depending on the environment, the SudoMagic plugins are intended to be drag and drop solutions for fast integration with the sudoSignals dashboard. The TouchDesigner plugin, for example, lets you quickly mirror your controls from your TouchDesigner project in a web friendly format. Control schemas are pre-defined, and allow for your development team to focus on building compelling experiences rather than creating overly complex dashboard controls.  ","version":"Next","tagName":"h2"},{"title":"Graphs and Reports‚Äã","type":1,"pageTitle":"Dashboard","url":"/v1/getting-started/view-installations/dashboard#graphs-and-reports","content":" On the right are graphed reports from your installation. Key performance indicators (KPIs) are available at both the Machine and Process level. By default, the KPIs for your machine will be displayed. These metrics are polled directly from the operating system. These graphs give you a quick view of your systems performance over time - allowing you to monitor your machine's performance remotely.  On the top of the graphs, you can toggle either Machine or Process graphs. Each process can also send metrics back to Signals to be displayed in this graph view. The data used for graphs is available for download as a Report from the System Info view. ","version":"Next","tagName":"h2"},{"title":"Installation settings","type":0,"sectionRef":"#","url":"/v1/getting-started/view-installations/installation-settings","content":"Installation settings Installation settings includes the controls for updating details about your installation. From this view you can change the name of your installation or delete it from your account. You can additionally view a read-only version of the settings assigned to your remote processes by clicking on the Process tab.","keywords":"","version":"Next"},{"title":"Logs","type":0,"sectionRef":"#","url":"/v1/getting-started/view-installations/logs","content":"Logs Logs provide realtime updates about the performance of your installation. Both the sudoSignals client and your installation Processes can report log messages to the dashboard. Logs are string-based messages that are intended to be human readable. Logs have three different levels of importance: InfoWarningCritical Log messages are formatted as: {log-level} | {time-stamp} | {reporting-process} | {log message} danger The current character limit for logs is 255.","keywords":"","version":"Next"},{"title":"Plugins","type":0,"sectionRef":"#","url":"/v1/plugins","content":"Plugins Plugins are used to communicate between Signals and an application. They allow you to remotely control your installations and to send data to and from the Dashboard. The SudoMagic team has some open source plugins that are officially supported. If you're interested in contributing a plugin for official support please contact us by visiting this page. üóÉÔ∏è TouchDesigner 2 items üóÉÔ∏è NodeJS 2 items","keywords":"","version":"Next"},{"title":"System Info","type":0,"sectionRef":"#","url":"/v1/getting-started/view-installations/sys-info","content":"","keywords":"","version":"Next"},{"title":"Machine Details‚Äã","type":1,"pageTitle":"System Info","url":"/v1/getting-started/view-installations/sys-info#machine-details","content":" Machine name, uptime, and last updated gives an at-a-glance view of the hardware you're monitoring. Uptime provides critical information on time since the last Windows restart. Last Updated is the time stamp since the last heartbeat from the sudoSignals client to the web Dashboard.  ","version":"Next","tagName":"h2"},{"title":"Installation Details‚Äã","type":1,"pageTitle":"System Info","url":"/v1/getting-started/view-installations/sys-info#installation-details","content":" This section contains key details about your installation and sudoSignals including: Installation ID, Client Version, and Client Id.  caution If you ever experience issues with your installation, the support team at sudoSignals may ask you to provide information about the Installation Id, Client Version, or Client Id for better troubleshooting.  ","version":"Next","tagName":"h2"},{"title":"Downloads‚Äã","type":1,"pageTitle":"System Info","url":"/v1/getting-started/view-installations/sys-info#downloads","content":" Logs and Reports from your installation can be downloaded for your offline review. These logs can be especially useful if you want to review data that exists outside of the graphed view on the dashboard. Note that this data is formatted as JSON.  ","version":"Next","tagName":"h2"},{"title":"Hardware Details‚Äã","type":1,"pageTitle":"System Info","url":"/v1/getting-started/view-installations/sys-info#hardware-details","content":" Hardware details provides vital insight into your local hardware. These details are broken into five categories:  CPU InformationMemory InformationDrive InformationGPU InformationNetwork Information  To see detailed information for each category, use the carrot to expand the section. ","version":"Next","tagName":"h2"},{"title":"NodeJS","type":0,"sectionRef":"#","url":"/v1/plugins/NodeJS","content":"NodeJS This plugin operates by communicating to the sudoSignals local service installed on your machine. For more information on how to install check out the getting started instructions. To getting started using NodeJS and learn more about developing NodeJS apps check out https://nodejs.dev/learn To install the sudoSignals plugin into your nodeJS project use the following: npm i sudosignals_nodeplugin You can then bring the sudoSignals code into your project with the following: //require the signals plugin var SignalsPlugin = require('sudosignals_nodeplugin').SignalsPlugin //Insert Process id from process configuration page in dashboard const PROCESS_ID = &quot;PROCESS_ID_HERE&quot; //Create plugin. var myPlugin = new SignalsPlugin(id=PROCESS_ID, onStart=()=&gt;{ console.log('Plugin has connected to signals service.') }) üìÑÔ∏è Getting Started An overview of NodeJS for sudoSignals üìÑÔ∏è Logging, Reporting, and Controls To unlock more advanced features of sudoSignals in a NodeJS app we have to add a few more elements.","keywords":"","version":"Next"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/v1/plugins/NodeJS/getting-started","content":"Getting Started To install NodeJS and learn more about developing NodeJS apps check out https://nodejs.dev/learn To install the sudoSignals plugin into your nodeJS project use the following: npm i sudosignals_nodeplugin You can then bring the sudoSignals code into your project with the following: //require the signals plugin var SignalsPlugin = require('sudosignals_nodeplugin').SignalsPlugin //Insert Process id from process configuration page in dashboard const PROCESS_ID = &quot;PROCESS_ID_HERE&quot; //Create plugin. var myPlugin = new SignalsPlugin(id=PROCESS_ID, onStart=()=&gt;{ console.log('Plugin has connected to signals service.') }) ","keywords":"","version":"Next"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/v1/plugins/TouchDesigner","content":"Getting Started Getting started with remote control for a TouchDesigner project is easy. Before we look at configuring our TouchDesigner project, first make sure that you have followed all of the instructions for getting your sudoSignals client installed and configured. Check out the getting started pages for a complete step by step walk through. TouchDesigner is a visual development platform that equips you with the tools you need to create stunning realtime projects and rich user experiences. Whether you're creating interactive media systems, architectural projections, live music visuals, or simply rapid-prototyping your latest creative impulse, TouchDesigner is the platform that can do it all. You can learn more about TouchDesigner here ‚Äî TouchDesigner Here you'll find documentation for working with the TouchDesigner Signals Plugin. This plugin is maintained by SudoMagic to get you up and running quickly. TouchDesigner Version The current sudoSignals plugin is has been updated to use some of the latest features in TouchDesigner 2023 builds. We recommend using 2023.32120 or later when using the sudoSignals TouchDesigner plugin","keywords":"","version":"Next"},{"title":"Manual Configuration |","type":0,"sectionRef":"#","url":"/v1/plugins/TouchDesigner/manual-config","content":"","keywords":"","version":"Next"},{"title":"Client Configuration‚Äã","type":1,"pageTitle":"Manual Configuration |","url":"/v1/plugins/TouchDesigner/manual-config#client-configuration","content":" Configuring the sudoSignals client is an important first step in the manual configuration process. On the configuration page take note of your Process ID this will be an essential identifier when setting-up the TouchDesigner Plugin to work with Signals.    info For manual plugin configurations, the Auto Start parameter should be toggled off. In these cases, we expect Signals to be running inside of another TouchDesigner process either as an Engine, or in an embedded TOX. In either of those cases, Signals would no longer be used to start and stop your project, only for controls  ","version":"Next","tagName":"h2"},{"title":"Configuring the Plugin in TouchDesigner‚Äã","type":1,"pageTitle":"Manual Configuration |","url":"/v1/plugins/TouchDesigner/manual-config#configuring-the-plugin-in-touchdesigner","content":" Drag and drop the sudoSignals TOX into your network.    On the Advanced Settings page toggle on the Manual Configuration parameter:    With Manual Concfiguration toggled on, head back to the Settings page. On the settings page enter the Process ID from the Client Configuration page.  Next head back to the Advanced Settings page and click on Reset Connection to restart the connection between TouchDesigner and sudoSignals.  info You only have to reset your connection the first time you set-up Signals. From now when TouchDesigner starts Signals will reach out and attempt to connect with Signals so it can act as a relay to your Dashboard. ","version":"Next","tagName":"h2"},{"title":"Remote Control | SudoMagic Plugin","type":0,"sectionRef":"#","url":"/v1/plugins/TouchDesigner/remote-control","content":"","keywords":"","version":"Next"},{"title":"Download the Plugin‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#download-the-plugin","content":" The Signals plugin can be downloaded from the github page. Optionally, you can download the sudoSignals TOX directly by clicking here.  ","version":"Next","tagName":"h2"},{"title":"Setup sudoSignals to launch your process‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#setup-sudosignals-to-launch-your-process","content":" Configure sudoSignals to open your project file. If you don't have a project handy, you can set sudoSignals open blank TouchDesigner project. If you need a quick reminder about how to configure sudoSignals to open a process, review steps 6 and 7 on the Configure Installation page.  ","version":"Next","tagName":"h2"},{"title":"Launch your TouchDesigner Process with sudoSignals‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#launch-your-touchdesigner-process-with-sudosignals","content":" Make sure Signals has launched your process. On the dashboard, you should see that there is now a process with the message:  This process has not connected yet and has limited information available   That tells us that sudoSignals has started our process, but that our process is not yet directly communicating back to the dashboard.    ","version":"Next","tagName":"h2"},{"title":"Add the sudoSignals TOX‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#add-the-sudosignals-tox","content":" Next, drop the sudoSignals TOX you downloaded into your project.    After dropping the plugin into TouchDesigner you should see some additional information on your dashboard. Your process button should change from red to green, and we should now see controls that are available from our TouchDesigner process.    caution If your project is not yet connected to Signals your controls and communication to the dashboard won't show up until you restart your project.  ","version":"Next","tagName":"h2"},{"title":"Save your Project file‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#save-your-project-file","content":" Save your project file on your computer. This will make sure that the sudoSignals TouchDesigner plugin is saved in your project.  ","version":"Next","tagName":"h2"},{"title":"Check your Installation‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#check-your-installation","content":" Once the plugin has been added to your project, you should now see some additional metrics for your installation.  Notice that in the center column of the Dashboard there is information about your controlled processes. This displays the assigned Signals Name along with the toolkit, and version that it's running.  ","version":"Next","tagName":"h2"},{"title":"Controls‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#controls","content":" The TouchDesigner Plugin supports controlling parameters in TouchDesigner remotely from the dashboard. This is handled by pointing the sudoSignals plugin to an operator with custom parameters.  A default operator with custom parameters is provided to help you get started.  Setting your control comp To set your own controls, simply drag and drop an operator with custom parameters onto the sudoSignals TOX's parameter for Control Comp. Adding additional control handles is as easy as customizing the Comp and adding more controls.    You should see that these same parameters and page names are reflected on the Dashboard:    info Controls for the sudoSignals plugin work both directions. Updating a custom parameter in TouchDesigner will be reflected on the cloud Dashboard, and changes on the Dashboard will push to the controlled TouchDesigner process.  ","version":"Next","tagName":"h3"},{"title":"Custom Reports and KPIs‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#custom-reports-and-kpis","content":" In addition to custom controls, the sudoSignals plugin also supports sending custom reports and KPIs to the Dashboard. You'll see a custom parameter called Custom Reports on the plugin.  On the dashboard, you'll see a toggle for Process reports - this will toggle the graphed view to the reports from your process.    A default operator with custom reports is provided to help you get started.  caution Currently only numerical values are supported by the graphing tool kit in use. To ensure correct formatting for your reports make sure your table is formatted as two columns with labels in column 0 and values in column 1. Your table should not include a header.    KPIs are sent to the Signals service at a regular interval ‚Äî these are then forwarded to the cloud. These reports can be seen in the graphs section of the Installation view by selecting the Process option from the drop down menu.  ","version":"Next","tagName":"h3"},{"title":"Logs‚Äã","type":1,"pageTitle":"Remote Control | SudoMagic Plugin","url":"/v1/plugins/TouchDesigner/remote-control#logs","content":" In addition to reports, the TouchDesigner sudoSignals plugin has an example configuration for how to send log messages to your dashboard.  A default operator with custom reports is provided to help you get started.    Log messages from your process can be found on the logs tab in the dashboard.   ","version":"Next","tagName":"h3"},{"title":"Logging, Reporting, and Controls","type":0,"sectionRef":"#","url":"/v1/plugins/NodeJS/Node-remote-conrol","content":"","keywords":"","version":"Next"},{"title":"1. Creating Logs‚Äã","type":1,"pageTitle":"Logging, Reporting, and Controls","url":"/v1/plugins/NodeJS/Node-remote-conrol#1-creating-logs","content":" Reports are one of the ways sudoSignals enables you to monitor whats happening in your installation. Here's how we set them up with the nodeJS plugin:  //require the signals plugin var SignalsPlugin = require('sudosignals_nodeplugin').SignalsPlugin //Insert Process id from process configuration page in dashboard const PROCESS_ID = &quot;PROCESS_ID_HERE&quot; //Create plugin. var myPlugin = new SignalsPlugin(id=PROCESS_ID, onStart=()=&gt;{ console.log('Plugin has connected to signals service.') myPlugin.Log(&quot;Hello sudoSignals!&quot;, logLevel=0) // logs a &quot;INFO&quot; message myPlugin.Log(&quot;Uh Oh sudoSignals!&quot;, logLevel=1) // logs a &quot;WARN&quot; message myPlugin.Log(&quot;sudoSignals, we have a problem...&quot;, logLevel=2) // logs a &quot;CRIT&quot; message })   ","version":"Next","tagName":"h2"},{"title":"2. Creating Reports‚Äã","type":1,"pageTitle":"Logging, Reporting, and Controls","url":"/v1/plugins/NodeJS/Node-remote-conrol#2-creating-reports","content":" Reports are one of the ways sudoSignals enables you to monitor whats happening in your installation. Here's how we set them up with the nodeJS plugin:  // Create a report definition. var Report1Definition = { label: &quot;My Report&quot;, value: 0, // value should always be a number. } // Add the report to plugin var Report1 = myPlugin.AddReport(Report1Definition) // Update the report value in your code regularly. setInterval(()=&gt;{ // Set value of report. /* Note - updates are pulled from the client and may not update as quickly as you set them */ Report1.SetValue(Report1.value+1) }, 3000)   ","version":"Next","tagName":"h2"},{"title":"3. Creating Controls‚Äã","type":1,"pageTitle":"Logging, Reporting, and Controls","url":"/v1/plugins/NodeJS/Node-remote-conrol#3-creating-controls","content":" Controls are a great way of controlling your project when you can't physically access the systems its on. There are many types of supported controls. Here is how to create them:  //Create a control definition /* Styles currently supported by sudoSignals: - Int - Float - Str - Menu - RGB - RGBA - XY - XYZ - UV - UVW - WH */ var Control1Definition = { name: &quot;MyInt&quot;, label: &quot;My Int&quot;, style: &quot;Int&quot;, } //Add control to plugin var Control1 = myPlugin.AddControl(Control1Definition) //Create a function to handle updates to the control const updateFunction = (control, currentValue)=&gt;{ console.log(control.label+' update!') console.log(&quot;Current value is:&quot;, currentValue) } //Set up control listener Control1.on(&quot;control-Update&quot;, updateFunction)  ","version":"Next","tagName":"h2"},{"title":"Troubleshooting","type":0,"sectionRef":"#","url":"/v1/troubleshooting","content":"Troubleshooting Welcome to the sudoSignals troubleshooting resources. Here you'll find common issues, and how to resolve them. üìÑÔ∏è Glossary A collection of the terminology that's used when describing sudoSignals. üìÑÔ∏è sudoSignals Features sudoSignals works with both installation licenses and a dashboard subscription. üìÑÔ∏è sudoSignals Config File Working with a YAML file for configuration. üìÑÔ∏è Installation Location Where sudoSignals is typically installed on a computer. üìÑÔ∏è Config Files &amp; Client Logs Where are my user config files located on my computer? üìÑÔ∏è Known Issues Known issues for sudoSignals","keywords":"","version":"Next"},{"title":"Config Files & Client Logs","type":0,"sectionRef":"#","url":"/v1/troubleshooting/config-and-logs","content":"Config Files &amp; Client Logs Where are my user config files located on my computer? User config files are located alongside the sudosignals.exe application on your server. For most users that directory path will look like: C:\\Program Files (x86)\\sudoSignals\\config Does the locally running client produce any log files? Yes! sudoSignals does produce log files. These are located alongside the sudosignals.exe application on your server. For most users that directory path with be: C:\\Program Files (x86)\\sudoSignals\\logs A typical log file should look something like this: INFO: 2023/03/26 20:25:50 ---------- Logging initialized ----------- INFO: 2023/03/26 20:25:50 VERSION: v1.0.5 INFO: 2023/03/26 20:25:50 connected to starter WARN: 2023/03/26 20:25:50 Config file version mismatch: Attempting Update. INFO: 2023/03/26 20:25:50 loading configuration from config/default.yaml INFO: 2023/03/26 20:25:50 No Client ID found, waiting for updates... INFO: 2023/03/26 20:25:50 listening for configuration connections on 57001 INFO: 2023/03/26 20:37:14 service updated INFO: 2023/03/26 20:37:14 service restart ","keywords":"","version":"Next"},{"title":"sudoSignals Features","type":0,"sectionRef":"#","url":"/v1/troubleshooting/account-features","content":"sudoSignals Features sudoSignals works with both installation licenses and a dashboard subscription. You can select to have as many or as few installation license as needed for your projects. Each installation machine that has a connection to the sudoSignals Dashboard needs it's own license. Your web Dashboard is a single pane of glass style interface that collects the stats and controls from all of your installations. There are different web Dashboard tiers that are independent from your installation licenses. By upgrading your Dashboard you instantly have access to additional features for all of your installations. You can see a complete list of features for sudoSignals on our Pricing page.","keywords":"","version":"Next"},{"title":"Installation Location","type":0,"sectionRef":"#","url":"/v1/troubleshooting/installation-location","content":"","keywords":"","version":"Next"},{"title":"Quit Signals and any controlled process‚Äã","type":1,"pageTitle":"Installation Location","url":"/v1/troubleshooting/installation-location#quit-signals-and-any-controlled-process","content":" Quit sudoSignals from the tray icon and close any open sudoSignals monitored process.    ","version":"Next","tagName":"h2"},{"title":"Open a new terminal window‚Äã","type":1,"pageTitle":"Installation Location","url":"/v1/troubleshooting/installation-location#open-a-new-terminal-window","content":" In a new terminal window move to the installation directory for sudoSignals.  cd &quot;C:\\Program Files (x86)\\sudoSignals&quot;    ","version":"Next","tagName":"h2"},{"title":"Use the --console flag‚Äã","type":1,"pageTitle":"Installation Location","url":"/v1/troubleshooting/installation-location#use-the---console-flag","content":" Start sudoSignals with the --console flag.  sudosignals.exe --console    ","version":"Next","tagName":"h2"},{"title":"Watch messages in the sudoSignals console‚Äã","type":1,"pageTitle":"Installation Location","url":"/v1/troubleshooting/installation-location#watch-messages-in-the-sudosignals-console","content":" This will launch the sudoSignals client with an open console that displays any logged messages.    ","version":"Next","tagName":"h2"},{"title":"Return to typical use‚Äã","type":1,"pageTitle":"Installation Location","url":"/v1/troubleshooting/installation-location#return-to-typical-use","content":" To close the console version of sudoSignals, quit sudoSignals from the tray icon.   ","version":"Next","tagName":"h2"},{"title":"Signals Config File","type":0,"sectionRef":"#","url":"/v1/troubleshooting/config-file","content":"Signals Config File Signals' operation is described by a YAML file. For a typical installation type, you can locate your config file in: C:\\Program Files (x86)\\sudoSignals\\config If your config file becomes corrupt, you can replace its contents with the following: # sudoSignals configuration file. # only directly edit this file if you know what you are doing. # editing properties in this file can lead to issues monitoring # and controlling your installations. # # To safely configure sudoSignals, right click on the sudoSignals # systey tray icon and select &quot;Configure&quot;. version: v1.0.5 installation: clientid: &quot;&quot; productid: &quot;&quot; startup: processes: [] tip Advanced users can choose to edit their YAML manually. Additionally, if you're configuring a large number of servers you may consider using a script to create your configuration files.","keywords":"","version":"Next"},{"title":"Known Issues","type":0,"sectionRef":"#","url":"/v1/troubleshooting/known-issues","content":"","keywords":"","version":"Next"},{"title":"Sleep‚Äã","type":1,"pageTitle":"Known Issues","url":"/v1/troubleshooting/known-issues#sleep","content":" sudoSignals may experiences connection issues when recovering from sleep or hibernation. When working on an installation we typically aim to control the power state of the machine directly, and always recommend that others do the same. You can review the process for here for adjusting Windows Sleep Settings. ","version":"Next","tagName":"h2"},{"title":"Glossary","type":0,"sectionRef":"#","url":"/v1/troubleshooting/glossary","content":"Glossary Term\tDefinitionaccount type\tYour sudoSignals account type describes the tier and features you can access on your web dashboard: free, basic, standard or enterprise. auto- start\tsudoSignals tracks to see if your target application is running and can be configured to keep the application running if it unexpectedly quits. card\tThe at-a-glance representation of an installation on the web dashboard. client\tThe sudoSignals application that runs on a machine in a venue. This application will broker communication between your local processes and the sudoSingals web dashboard. controlled process\tA process that you intend to control remotely with a sudoSignals plugin. custom controls\tCustom controls are defined at the process level, and allow for bidirectional communication between the web dashboard and the local process. Custom controls mirror state on your local machine to the web dashboard. Controls follow a API specification which allows sudoSignals to generate a user interface without the requirement for custom development. drive monitoring\tThe capability of the local sudoSignals client to monitor the drive status of your installation machine. On Windows OS, sudoSignals uses a system library to communicate key statistics about your local server with the cloud. environment variable\tAn environment variable is a dynamic-named value that can affect the way running processes will behave on a computer. Environment variables are part of the environment in which a process runs. See more on Wikipedia. graph\tThe 2D line graph of data presented in the dashboard view of an installation. Data from ‚Äòreports‚Äô is the only data that can be displayed in a graph on the sudoSignals dashboard. heartbeat monitoring\tThe sudoSignals client communicates with a heartbeat style mechanic, which looks for communication from your local server at a regular interval. If the web dashboard misses consecutive heartbeats it will notify you that your process or installation has gone offline. installation\tA computer resource you wish to monitor and control. logs\tString messages communicated from a local process to the sudoSignals web dashboard. Logs are intended as messages you wish you communicate from a process to the web dashboard. Logs are composed of both a log level and a message. The log level is represented as an integer value of 0, 1, or 2. This corresponds to a log level of Info Warning, and Critical. Log messages can be a maximum of 255 characters notifications\tEmail or SMS messages sent when sudoSignals detects a notification event. Currently supported events include: a process going offline (e.g. quitting unexpectedly), or an installation going offline. plugin\tThe generalized framework developed for a specialized environment - i.e. the sudoSignals TouchDesigner plugin. Plugins allow local processes to communicate with the sudoSignals client. product-id\tThe internal ID used by sudoSignals to associate a user with installations. This is unique to the installation that sudoSignals is controlling. process\tAn application you wish to control or monitor with sudoSignals. sudoSignals can send control messages to a process that has a supported plugin. reports\tKey-value pairs that are sent from controlled processes to the web dashboard. This data can be graphed and downloaded from the dashboard. Report keys should be constructed as strings, and values as numbers. Reports are intended to be graphed on the sudoSignals web dashboard and are displayed in the order they are received. signals-id\tA generated ID used by sudoSignals to communicate with your local processes. This is unique to the process that sudoSignals is controlling. signals-name\tThe user generated name that is attached to a process running on your installation machine. saved states\tThe state of all custom controls for a given process at a given moment in time. The complete collection of custom controls are saved at the process level in a ‚Äòstate‚Äô. States allow a user to recall a process's custom controls at a given moment. In other applications this may be referred to as a preset. web dashboard\tThe sudoSignals website where a user can access the status or control parameters for their installations.","keywords":"","version":"Next"},{"title":"Plugin API","type":0,"sectionRef":"#","url":"/v2/api","content":"Plugin API Plugins use an API for communicating with the local sudoSignals client. While there are some existing plugins for sudoSignals, you're welcome to develop your own tools to better suite your organizations' needs. sudoSignals has an open websocket API for controlling and reporting on process behavior. The local sudoSignals client is responsible for starting processes on the local server, reporting system diagnostic information, and relaying information and control settings between the dashboard and the plugins embedded in the monitored processes. üìÑÔ∏è Service API Service API reference","keywords":"","version":"Next"},{"title":"sudoSignals v2","type":0,"sectionRef":"#","url":"/v2","content":"","keywords":"","version":"Next"},{"title":"What is this resource?‚Äã","type":1,"pageTitle":"sudoSignals v2","url":"/v2#what-is-this-resource","content":" This resource is the single source documentation guide for working with the sudoSignals local application, with the web Dashboard, with any SudoMagic created plugins, and with the Signals API (helpful if you're going to create your own plugin).  ","version":"Next","tagName":"h2"},{"title":"Where to go next:‚Äã","type":1,"pageTitle":"sudoSignals v2","url":"/v2#where-to-go-next","content":" Getting Started - create an account, install sudoSignals, and configuration Working with Plugins - working with plugins to remotely control your installation Troubleshooting - common issues, and their resolution API Documentation - build your own sudoSignals plugin ","version":"Next","tagName":"h2"},{"title":"Dashboard Anatomy","type":0,"sectionRef":"#","url":"/v2/dashboard-anatomy","content":"Dashboard Anatomy The Dashboard Anatomy is here to help you sort the ins and outs of the sudoSignals dahboard. üìÑÔ∏è Dashboard View An overview of the features on the Dashboard üóÉÔ∏è Installation View 6 items üóÉÔ∏è Machine View 6 items üìÑÔ∏è Status Indicators Summary of sudoSignals status indicators","keywords":"","version":"Next"},{"title":"Service API","type":0,"sectionRef":"#","url":"/v1/api/service-api","content":"","keywords":"","version":"Next"},{"title":"Service Connections‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#service-connections","content":" A plugin can connect to the sudoSignals client via a websocket connection on port 57002. Once connected the API will allow you to integrate with the sudoSignals dashboard.  danger For security of your project and processes, only plugin connections from the local machine will be accepted.  ","version":"Next","tagName":"h2"},{"title":"Packet Structure‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#packet-structure","content":" Websocket messages are sent as text formatted with JSON. They will follow this structure:  { &quot;action&quot;: &lt;string&gt;, // Action type &quot;data&quot;: &lt;map&gt;, // Data relating to that action (report metrics, controls, etc) &quot;identifier&quot;: &lt;string&gt;\t// Identifying the process sending the packet. }   ","version":"Next","tagName":"h2"},{"title":"Actions‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#actions","content":" sudoSignals defines a number of different actions that can be used in communication between the Plugin and the Service.  Action\tDescriptorStart\tSent by Signals Service on connection to confirm connection is open. identify\tSent by Plugin to give information about process and identify connections for monitoring. report\tSent by Plugin to update reports in dashboard. log\tSent by Plugin to log a message in the dashboard. control-Set\tSent by Plugin to update current state of controls that are available for remote control. control-Update\tSent by Signals Service to update controls to a new state.  ","version":"Next","tagName":"h2"},{"title":"Packets‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#packets","content":" ","version":"Next","tagName":"h2"},{"title":"Start‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#start","content":" When the socket connection opens, the server sends an immediate &quot;Start&quot; packet to confirm the connection is open. This packets will look like the following:  { &quot;action&quot;: &quot;Start&quot;, &quot;data&quot;: {}, &quot;identifier&quot;: &quot;system&quot; }   The local client will always be identified as system.    ","version":"Next","tagName":"h3"},{"title":"identify‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#identify","content":" In order to register your plugin within the sudoSignals Service, you must first identify the connection by sending the unique process id, software name, and software version:  { &quot;action&quot;: &quot;identify&quot;, &quot;data&quot;: { &quot;software&quot;: &quot;TouchDesigner&quot;, &quot;version&quot;: &quot;099 21000&quot; }, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }   tip The unique system id can be found in the configuration file or as an environment variable specified when the process was started called &quot;SIGNALS_ID&quot;.    ","version":"Next","tagName":"h3"},{"title":"report‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#report","content":" This sends the current state of any values from your plugin you would like logged and available later. &lt;ReportMap&gt; structure is defined below.  { &quot;action&quot;: &quot;report&quot;, &quot;data&quot;: &lt;ReportMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }   tip You can send this message to the client as often as you would like however it is rate limited from the client to the dashboard.    ","version":"Next","tagName":"h3"},{"title":"log‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#log","content":" This sends a log message from your plugin that you would like to see in the dashboard. &lt;LogMap&gt; structure is defined below.  { &quot;action&quot;: &quot;log&quot;, &quot;data&quot;: &lt;LogMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }   info Log messages are limited in length to 256 characters. You can send this message to the client as often as you would like however it is rate limited from the client to the dashboard. Timing is maintained by the client and will be reported based on your system clock.    ","version":"Next","tagName":"h3"},{"title":"control-Set‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#control-set","content":" This sends the current state of controls that are available for remote control. &lt;ControlMap&gt; structure is defined below.  { &quot;action&quot;: &quot;control-Set&quot;, &quot;data&quot;: &lt;ControlMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }     ","version":"Next","tagName":"h3"},{"title":"control-Update‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#control-update","content":" This is a packet that can be received from the sudoSignals Service. This packet should set the controls in your plugin to the state defined in the packet. &lt;ControlMap&gt; structure is defined below.  { &quot;action&quot;: &quot;control-Update&quot;, &quot;data&quot;: &lt;ControlMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }     ","version":"Next","tagName":"h3"},{"title":"Map Definitions‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#map-definitions","content":" ","version":"Next","tagName":"h2"},{"title":"Report Map‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#report-map","content":" \t{ &quot;kpis&quot;: [ //Array of all reportable values { &quot;label&quot;\t: &lt;string&gt;, // required &quot;value&quot;\t: &lt;Number&gt;, // required } ] }     ","version":"Next","tagName":"h3"},{"title":"Log Map‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#log-map","content":" \t{ &quot;logLevel&quot;\t: &lt;int&gt;, // required - 0=info, 1=warn, 2=critical &quot;message&quot;\t: &lt;string&gt; // required - the message you would like logged }   info Log messages are limited in length to 256 characters.    ","version":"Next","tagName":"h3"},{"title":"Control Map‚Äã","type":1,"pageTitle":"Service API","url":"/v1/api/service-api#control-map","content":" \t{ &quot;state&quot;: [ { &quot;name&quot;: &lt;string&gt;, // Page Name - this corresponds to tabs on the dashboard. &quot;pars&quot;: [ // list of pars that are contained in that tab. { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;any&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;\t// optional } ] } ] }   Supported Control Styles‚Äã  Style\tDescriptor\tControl TypeInt\tInteger\tsimple Float\tFloat\tsimple Str\tString\tsimple Toggle\tToggle\tsimple Pulse\tPulse\tsimple Menu\tMenu\tcomplex StrMenu\tStrMenu\tcomplex RGB\tColor with no Alpha\tcomplex RGBA\tColor with Alpha\tcomplex XY\tXY\tcomplex XYZ\tXYZ\tcomplex UV\tUV\tcomplex UVW\tUVW\tcomplex WH\tWH\tcomplex  info Control styles were developed using TouchDesigner as a prototyping platform. If you would like to see any additional control types added to this list submit a RFE at https://github.com/SudoMagicCode/SudoSignals/discussions  Additional Control Properties for Complex Styles‚Äã  Menu and StrMenu‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;menuNames&quot; :\t[&lt;string&gt;], // Required for Menu and StrMenu &quot;menuLabels&quot;\t: [&lt;string&gt;], // Required for Menu and StrMenu }   RGB and RGBA‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// Red Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Green Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Blue Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Alpha Component if RGBA &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }   XY and XYZ‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// X Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Y Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Z Component if XYZ &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }   UV and UVW‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// U Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// V Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// W Component if UVW &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }   WH‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// W Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;int&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// H Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;int&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }  ","version":"Next","tagName":"h3"},{"title":"Installation View","type":0,"sectionRef":"#","url":"/v2/dashboard-anatomy/installation-view","content":"Installation View This view shows all the helpful information about installation, including its: machines, controls, reports, system info, logs, and alerts. üìÑÔ∏è Overview An overview of the features on the Dashboard üìÑÔ∏è System Info An overview of the features on the system info view on the Dashboard üìÑÔ∏è Reports An overview of the Reports on the Dashboard üìÑÔ∏è Logs An overview of the Logs on the Dashboard üìÑÔ∏è Alerts An overview of Alerts on the Dashboard. üìÑÔ∏è Installation Settings Installation settings configureation.","keywords":"","version":"Next"},{"title":"Dashboard View","type":0,"sectionRef":"#","url":"/v2/dashboard-anatomy/dashboard-view","content":"","keywords":"","version":"Next"},{"title":"Menu‚Äã","type":1,"pageTitle":"Dashboard View","url":"/v2/dashboard-anatomy/dashboard-view#menu","content":" The top right main menu section is where you can adjust the color mode to Light or Dark, view account settings, along with additional helpful links.    ","version":"Next","tagName":"h2"},{"title":"Account Menu‚Äã","type":1,"pageTitle":"Dashboard View","url":"/v2/dashboard-anatomy/dashboard-view#account-menu","content":" From the Account dropdown, you'll find the user email, a button for the Account settings and the Logout link.    ","version":"Next","tagName":"h3"},{"title":"Hamburger Menu‚Äã","type":1,"pageTitle":"Dashboard View","url":"/v2/dashboard-anatomy/dashboard-view#hamburger-menu","content":" The Hamburger dropdown has links for the following:  Download ClientDocumentationForumsReport An Issue    ","version":"Next","tagName":"h3"},{"title":"Team Selection‚Äã","type":1,"pageTitle":"Dashboard View","url":"/v2/dashboard-anatomy/dashboard-view#team-selection","content":" In order to change which team you're viewing on the sudoSignals dashboard, click on Team Selection dropdown on the top right of the dashboard view.  Lorem ipsum    ","version":"Next","tagName":"h2"},{"title":"Machines‚Äã","type":1,"pageTitle":"Dashboard View","url":"/v2/dashboard-anatomy/dashboard-view#machines","content":" The left panel shows a list of all available machines added the selected team.    ","version":"Next","tagName":"h2"},{"title":"Installations‚Äã","type":1,"pageTitle":"Dashboard View","url":"/v2/dashboard-anatomy/dashboard-view#installations","content":" The right panel shows all installations that belong to the respective team.   ","version":"Next","tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/v2/getting-started","content":"Getting Started sudoSignals is an application monitor that's connected to a web dashboard. üìÑÔ∏è Create an Account An overview of creating your sudoSignals Account üìÑÔ∏è Install Signals A step-by-step guide for installing sudoSignals üóÉÔ∏è Client Configuration 5 items üìÑÔ∏è Connect to the Dashboard How to to connect the client to the dashboard üóÉÔ∏è Create an Installation 1 item","keywords":"","version":"Next"},{"title":"Client Configuration","type":0,"sectionRef":"#","url":"/v2/getting-started/client-configuration","content":"Client Configuration The sudoSignals client is the key piece for connecting your machine to the web dashboard. sudoSignals runs as a local process on your Windows computer, and is controlled via an online web Dashboard. Once you have downloaded sudoSignals client, you can start configuring your machine. Open the sudoSignals client to get started. üìÑÔ∏è Configure the Client How to configure the sudoSignals client üìÑÔ∏è Create a Profile How to create a Profile üìÑÔ∏è Using Delays How to use Delays üóÉÔ∏è Configure a Process 1 item üìÑÔ∏è Client Settings Client Settings","keywords":"","version":"Next"},{"title":"Configure a Process","type":0,"sectionRef":"#","url":"/v2/getting-started/client-configuration/configure-a-process","content":"","keywords":"","version":"Next"},{"title":"Select a Profile‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#select-a-profile","content":" Before adding your first process, select the Profile you would like to add it to.    ","version":"Next","tagName":"h2"},{"title":"Create a New Process‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#create-a-new-process","content":" Next click Add New Process, and click on the gear icon on the process card and select Configure to configure it.    ","version":"Next","tagName":"h2"},{"title":"Configure Process‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#configure-process","content":" The Process Name is the unique name you'd like to associate with your process. You might choose to name this after the tookit you're using, or based on the work a given application is responsible for doing.    ","version":"Next","tagName":"h2"},{"title":"Process ID‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#process-id","content":" If you're developing your own plugin, the process-id will be used by your application when communicating with signals.  ","version":"Next","tagName":"h3"},{"title":"Auto Start‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#auto-start","content":" If you'd like to specify that sudoSignals open an application or file, toggle the Auto Start so that is enabled.  ","version":"Next","tagName":"h3"},{"title":"Uses Plugin‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#uses-plugin","content":" IN PROGRESS This feature is still in progress for v2 release.  ","version":"Next","tagName":"h3"},{"title":"Selecting a Program or File (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#selecting-a-program-or-file-optional","content":" Click on the Select a Program... field, and it will open a file dialog so that you can select your program or file.    ","version":"Next","tagName":"h2"},{"title":"Always Restart‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#always-restart","content":" sudoSignals can monitor applications and keep them alive if they quit unexpectedly. To enable this for your process, toggle on the Always Restart.  To have Signals keep the application always running, leave the Restart Limit set to 0. If you only want Signals to restart an application a specific number of times, enter that number in the Restart Limit field.    info If you don't want your application to restart infinitely, then specify a Restart Limit value that is greater than 0 so that Signals only restarts the application a fixed number of times.  ","version":"Next","tagName":"h3"},{"title":"Specify an Application (optional)‚Äã","type":1,"pageTitle":"Configure a Process","url":"/v2/getting-started/client-configuration/configure-a-process#specify-an-application-optional","content":" If you've selected a file type that's opened by another application (like .toe, .unity, etc), sudoSignals will attempt to find programs registered with Windows that can open that file.  You can select the application from the drop down list, or select Other to manually navigate to the program you want to use. If you do have multiple versions of an application installed, make sure that the correct version has been selected for your file.    Selecting a program is an optional field. If you have a built executable you'd like to open, Signals will just open that .exe.  Unreal Engine If you're working with an executable built in Unreal Engine, you may need to take a few extra steps in your configuration. The .exe built by Unreal sometimes uses a process starter that runs another executable. Be sure that you're targeting the correct .exe when using Signals to be able to faithfully stop and start your process. ","version":"Next","tagName":"h2"},{"title":"Advanced Options","type":0,"sectionRef":"#","url":"/v2/getting-started/client-configuration/configure-a-process/advanced-options","content":"","keywords":"","version":"Next"},{"title":"Advanced Process Options (optional)‚Äã","type":1,"pageTitle":"Advanced Options","url":"/v2/getting-started/client-configuration/configure-a-process/advanced-options#advanced-process-options-optional","content":" Some installations require extra care during start-up and sudoSignals has some advanced features to help ensure everything runs smoothly. To see the advanced Process options expand the Advanced Options carrot.    Optional Configuration Advanced process options are optional and not required for sudoSignals to monitor and control your processes.  ","version":"Next","tagName":"h2"},{"title":"Working Directory‚Äã","type":1,"pageTitle":"Advanced Options","url":"/v2/getting-started/client-configuration/configure-a-process/advanced-options#working-directory","content":" The Working Directory field allows you to specify the execution directory for your selected file and program. This may be especially important if you are launching a project that's written in Python or NodeJS.  ","version":"Next","tagName":"h2"},{"title":"Command Line Preview‚Äã","type":1,"pageTitle":"Advanced Options","url":"/v2/getting-started/client-configuration/configure-a-process/advanced-options#command-line-preview","content":" The Preview Command Line field displays the equivalent command string that will be used to start your process. If your familiar with starting applications from the Windows terminal reviewing this command may help ensure that your application starts up correctly.    ","version":"Next","tagName":"h2"},{"title":"Command Line Arguments‚Äã","type":1,"pageTitle":"Advanced Options","url":"/v2/getting-started/client-configuration/configure-a-process/advanced-options#command-line-arguments","content":"   ","version":"Next","tagName":"h3"},{"title":"Environment Variables‚Äã","type":1,"pageTitle":"Advanced Options","url":"/v2/getting-started/client-configuration/configure-a-process/advanced-options#environment-variables","content":" Many applications or environments can access Environment Variables that are set during application launch. You can add as many Environment Variables as is appropriate for your application. Use the Add Environment Variables button to enter the key and value pair you'd like to have set when your process starts.   ","version":"Next","tagName":"h2"},{"title":"Configure the Client","type":0,"sectionRef":"#","url":"/v2/getting-started/client-configuration/configure-the-client","content":"Configure the Client When you first start the client, you will see the status as initializing. To learn more about sudoSignals' statuses, visit Status Indicators. Initially, the profile will be set to Default ‚Äî review the next section to learn how to create your own profile.","keywords":"","version":"Next"},{"title":"Create a Profile","type":0,"sectionRef":"#","url":"/v2/getting-started/client-configuration/create-profile","content":"","keywords":"","version":"Next"},{"title":"Profile Setup‚Äã","type":1,"pageTitle":"Create a Profile","url":"/v2/getting-started/client-configuration/create-profile#profile-setup","content":" On Configuration tab, the left column shows all Profiles available on your machine. On install, sudoSignals comes with a Default profile that you can use for your projects. You can rename that profile or delete it.    Additionally, you can create a new profile using the + Create New Profile button.    We recommend that you name your profile something descriptive.    Once your profile is created, it should appear in the Profiles list.    ","version":"Next","tagName":"h2"},{"title":"Set Current Profile‚Äã","type":1,"pageTitle":"Create a Profile","url":"/v2/getting-started/client-configuration/create-profile#set-current-profile","content":" To set this new profile as your active profile, navigate to the Overview tab and select the profile from the dropdown list and hit Apply.   ","version":"Next","tagName":"h2"},{"title":"Client Settings","type":0,"sectionRef":"#","url":"/v2/getting-started/client-configuration/settings","content":"","keywords":"","version":"Next"},{"title":"Port Number‚Äã","type":1,"pageTitle":"Client Settings","url":"/v2/getting-started/client-configuration/settings#port-number","content":" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  ","version":"Next","tagName":"h2"},{"title":"Profile Directory‚Äã","type":1,"pageTitle":"Client Settings","url":"/v2/getting-started/client-configuration/settings#profile-directory","content":" The directory location for the client's profiles.  ","version":"Next","tagName":"h2"},{"title":"Log Directory‚Äã","type":1,"pageTitle":"Client Settings","url":"/v2/getting-started/client-configuration/settings#log-directory","content":" The directory location for the client's log files.  ","version":"Next","tagName":"h2"},{"title":"Resetting Defaults‚Äã","type":1,"pageTitle":"Client Settings","url":"/v2/getting-started/client-configuration/settings#resetting-defaults","content":" Pressing the Reset Defaults button will reset any changes made on the Settings page.  ","version":"Next","tagName":"h2"},{"title":"Revoking Access‚Äã","type":1,"pageTitle":"Client Settings","url":"/v2/getting-started/client-configuration/settings#revoking-access","content":" Pressing the Revoke Access button will revoke the dashboard's access to the client. It will also generate a new token for the Client. ","version":"Next","tagName":"h2"},{"title":"Using Delays","type":0,"sectionRef":"#","url":"/v2/getting-started/client-configuration/using-delays","content":"","keywords":"","version":"Next"},{"title":"Adding Delays‚Äã","type":1,"pageTitle":"Using Delays","url":"/v2/getting-started/client-configuration/using-delays#adding-delays","content":" On Configuration tab, the Processes column has a button to Add Delay.    ","version":"Next","tagName":"h2"},{"title":"Adjusting Delays‚Äã","type":1,"pageTitle":"Using Delays","url":"/v2/getting-started/client-configuration/using-delays#adjusting-delays","content":" By default, delays are set to 5 seconds. Click on the clock icon to adjust the duration of the delay.    A dialog will appear where you can adjust the duration (in seconds).    The placement of the delay can also be adjusted by using the handle icon (left) of the delay card.   ","version":"Next","tagName":"h3"},{"title":"Connect to the Dashboard","type":0,"sectionRef":"#","url":"/v2/getting-started/connect-to-dashboard","content":"","keywords":"","version":"Next"},{"title":"Verification Code‚Äã","type":1,"pageTitle":"Connect to the Dashboard","url":"/v2/getting-started/connect-to-dashboard#verification-code","content":" A dialog will appear with the verification code for your machine.    Note If you delete your machine from the dashboard, a new verification code will be generated.  ","version":"Next","tagName":"h2"},{"title":"Add Machine‚Äã","type":1,"pageTitle":"Connect to the Dashboard","url":"/v2/getting-started/connect-to-dashboard#add-machine","content":" Back on the web dashboard, click the + sign to add a machine.    Enter the Verification Code and a descriptive name for your machine.    Once connected, you should see the machine appear in the Machines list.   ","version":"Next","tagName":"h2"},{"title":"Create Your Account","type":0,"sectionRef":"#","url":"/v2/getting-started/create-an-account","content":"","keywords":"","version":"Next"},{"title":"Open your Browser‚Äã","type":1,"pageTitle":"Create Your Account","url":"/v2/getting-started/create-an-account#open-your-browser","content":" In your browser head to v2-dashboard.sudosignals.com. You should see a page that looks like:    ","version":"Next","tagName":"h2"},{"title":"Create Your Account‚Äã","type":1,"pageTitle":"Create Your Account","url":"/v2/getting-started/create-an-account#create-your-account-1","content":" Click the link to sign up at the bottom of the form.  Next you'll see a page to enter your email address, name, and create a password.    ","version":"Next","tagName":"h2"},{"title":"Verify Your Email‚Äã","type":1,"pageTitle":"Create Your Account","url":"/v2/getting-started/create-an-account#verify-your-email","content":" After clicking Sign up you'll be prompted to verify your email.  Check your inbox for an email from sudoSignals to verify your email address.    Finally, click the link to confirm your account and you should be good to go!  ","version":"Next","tagName":"h2"},{"title":"Login to the Dashboard‚Äã","type":1,"pageTitle":"Create Your Account","url":"/v2/getting-started/create-an-account#login-to-the-dashboard","content":" You should now be able to log in on the sudoSignals dashboard.   ","version":"Next","tagName":"h2"},{"title":"Status Indicators","type":0,"sectionRef":"#","url":"/v2/dashboard-anatomy/status-indicators","content":"","keywords":"","version":"Next"},{"title":"Client Indicators‚Äã","type":1,"pageTitle":"Status Indicators","url":"/v2/dashboard-anatomy/status-indicators#client-indicators","content":" Indicator\tStatus\tDescription\tDisconnected\tInitial status for sudoSignals clients have yet to be connected to the sudoSignals web dashboard. Connected\tStatus to show that the sudoSignals desktop client is connected to the web dashbaord.  ","version":"Next","tagName":"h2"},{"title":"Installation Indicators‚Äã","type":1,"pageTitle":"Status Indicators","url":"/v2/dashboard-anatomy/status-indicators#installation-indicators","content":" Indicator\tStatus\tDescription\tInitializing\tInitial status for installations that do not have any machines. Installation Online\tIndicates that an installation is online and connected to the sudoSignals client. Installations with online status indicate that all sub-processes and machines are also online. Installation Warning\tIndicates that some of an installation's machines or it's processes may be offline. Installation Offline\tIndicates that an installation is disconnected. For installations, the offline status means that all sub-processes are offline. Unknown\tFor unspecified behavior in processes, machines or installations.  ","version":"Next","tagName":"h2"},{"title":"Machine Indicators‚Äã","type":1,"pageTitle":"Status Indicators","url":"/v2/dashboard-anatomy/status-indicators#machine-indicators","content":" Indicator\tStatus\tDescription\tInitializing\tInitial status for machines that have yet to be connected to the sudoSignals web dashboard. Machine Online\tIndicates that the machine is online and connected to the sudoSignals client. Machine Warning\tFor machines, a warning status indicates that some of it's processes may be offline. Machine Offline\tIndicates that the machine may be disconnected. Unknown\tFor unspecified behavior in processes, machines or installations.  ","version":"Next","tagName":"h2"},{"title":"Process Indicators‚Äã","type":1,"pageTitle":"Status Indicators","url":"/v2/dashboard-anatomy/status-indicators#process-indicators","content":" Indicator\tStatus\tDescription\tRunning\tFor processes that are being successfully being controlled by sudoSignals, but that are not using a plugin. Process Online\tIndicates that the process is online and connected to the sudoSignals client. Process Offline\tIndicates that the process may be disconnected. Unknown\tFor unspecified behavior in processes, machines or installations. ","version":"Next","tagName":"h2"},{"title":"Create an Installation","type":0,"sectionRef":"#","url":"/v2/getting-started/create-installation","content":"","keywords":"","version":"Next"},{"title":"Open the sudoSignals Dashboard‚Äã","type":1,"pageTitle":"Create an Installation","url":"/v2/getting-started/create-installation#open-the-sudosignals-dashboard","content":" Start by heading to the sudoSignals dashboard at dashboard.sudosignals.com  ","version":"Next","tagName":"h2"},{"title":"Create an Installation‚Äã","type":1,"pageTitle":"Create an Installation","url":"/v2/getting-started/create-installation#create-an-installation-1","content":" Create an installation using the + button in the right panel.    ","version":"Next","tagName":"h2"},{"title":"Name the Installation‚Äã","type":1,"pageTitle":"Create an Installation","url":"/v2/getting-started/create-installation#name-the-installation","content":" Enter a descriptive name for your installation and the click Create.      After creating your installation, you'll be directed back to your dashboard where you can see a card with all of the at-a-glance details for your installation.   ","version":"Next","tagName":"h2"},{"title":"Organize Your Machines","type":0,"sectionRef":"#","url":"/v2/getting-started/create-installation/organize-your-machines","content":"","keywords":"","version":"Next"},{"title":"Manage Machines‚Äã","type":1,"pageTitle":"Organize Your Machines","url":"/v2/getting-started/create-installation/organize-your-machines#manage-machines","content":" A manage machines dialog will appear with two section: Assigned Machines and Unassigned Machines.  ","version":"Next","tagName":"h2"},{"title":"Unassigned Machines‚Äã","type":1,"pageTitle":"Organize Your Machines","url":"/v2/getting-started/create-installation/organize-your-machines#unassigned-machines","content":" Any machines in the Machines section of the dashboard will appear in the unassigned machine section. Use the + button on the machine you would like to add to your installation.    ","version":"Next","tagName":"h3"},{"title":"Assigned Machines‚Äã","type":1,"pageTitle":"Organize Your Machines","url":"/v2/getting-started/create-installation/organize-your-machines#assigned-machines","content":" Once the machine has been assigned to the installation, it will appear in the assigned machines section.    Clicking back on the dashboard, the machine will no longer be in Machines section and will now be part of the installation.   ","version":"Next","tagName":"h3"},{"title":"Installation Settings","type":0,"sectionRef":"#","url":"/v2/getting-started/installation-view/installation-settings","content":"Installation Settings At the top right of the installation view, you can find the gear icon. Clicking on the icon opens the Installation Settings dialog. On this dialog, there's the ability to edit the: Installation Image This image is generated by default when the installation is created, but can be changed using thed edit button. Installation Name Recommended to be a descriptive name for the installation. Installation Team The team the installation is assigned to.","keywords":"","version":"Next"},{"title":"Alerts","type":0,"sectionRef":"#","url":"/v2/getting-started/machine-view/alerts","content":"","keywords":"","version":"Next"},{"title":"Installation Alerts‚Äã","type":1,"pageTitle":"Alerts","url":"/v2/getting-started/machine-view/alerts#installation-alerts","content":" Signals can be configured to send an alert for:  All Processes Specific Processes Log Alerts  Note that when an installation, machine or process going offline may be due to a power outage, a computer restart, or an interruption in internet connectivity.    info When sudoSignals is set to Auto Restart your process, it will restart your application even if it crashes. When process alerts are enabled, you may still get a notification that your process has fallen offline so that you can investigate at your earliest convenience.  ","version":"Next","tagName":"h2"},{"title":"Alert Settings‚Äã","type":1,"pageTitle":"Alerts","url":"/v2/getting-started/machine-view/alerts#alert-settings","content":" See the machine's correspponding installation to mute it's alerts.   ","version":"Next","tagName":"h2"},{"title":"Machine View","type":0,"sectionRef":"#","url":"/v2/getting-started/dashboard-anatomy/machine-view","content":"Machine View Similar to the installation view, the machine view shows additional details about the machine's processes, including its: machines, controls, reports, system info, logs, and alerts. üìÑÔ∏è Overview An overview of the features on the Dashboard üìÑÔ∏è System Info An overview of the features on the system info view on the Dashboard üìÑÔ∏è Reports An overview of Reports on the Dashboard üìÑÔ∏è Logs An overview of the Logs on the Dashboard üìÑÔ∏è Alerts An overview of Alerts on the Dashboard. üìÑÔ∏è Machine Settings Installation settings configureation.","keywords":"","version":"Next"},{"title":"Installing sudoSignals","type":0,"sectionRef":"#","url":"/v2/getting-started/installing-sudoSignals","content":"","keywords":"","version":"Next"},{"title":"Download sudoSignals‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#download-sudosignals","content":" Here is the latest sudoSignals installer.  Versioning You should always use a sudoSignals client whose system version matches the major and minor version for the dashboard. For example, the client 1.0.1 is compatible with a dashboard 1.0.5; however a client with a version 1.1.1 would not be compatible with a dashboard 1.0.5. Versioning follows the pattern major.minor.patch - e.g. 1.0.1  ","version":"Next","tagName":"h2"},{"title":"Run the Installer‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#run-the-installer","content":" After downloading the installer, it's time to get sudoSignals up and running. Start by double clicking the installer.  ","version":"Next","tagName":"h2"},{"title":"Windows Protection‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#windows-protection","content":" caution We're working on getting our Windows application publisher certificate. In the meantime, there's an extra step to getting the installer working.  You should see a warning from Windows about an application from an unknown publisher.    First click the link for More info, and then click Run anyway    ","version":"Next","tagName":"h3"},{"title":"Welcome‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#welcome","content":" You should then see the Welcome window of the Setup Wizard; begin the installation process by clicking Next.    ","version":"Next","tagName":"h3"},{"title":"Accept the EULA‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#accept-the-eula","content":" Signals has an end user licensing agreement, mark that you accept the agreement and then click Next.    ","version":"Next","tagName":"h3"},{"title":"Select Installation Location‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#select-installation-location","content":" By default sudoSignals is installed in Program Files(x86)\\SudoSignals    ","version":"Next","tagName":"h3"},{"title":"Additional Settings‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#additional-settings","content":" There are some additional settings you can adjust when installing sudoSignals.   sudoSignals Client is the control software that's required with this installation Create a desktop shortcut (optional) Remove beta config files - if you were a beta tester it is important to check this box Remove old configuration files - if you're installing a major Signals release this is an important box to check    ","version":"Next","tagName":"h3"},{"title":"Install‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#install","content":" Review the installer's settings and if everything looks correct, you can begin the installation process by clicking Install.    ","version":"Next","tagName":"h3"},{"title":"Finish‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#finish","content":" You can complete the Setup Wizard by clicking Finish. By default sudoSignals is configured to launch when installation is complete.    ","version":"Next","tagName":"h3"},{"title":"Finding Signals‚Äã","type":1,"pageTitle":"Installing sudoSignals","url":"/v2/getting-started/installing-sudoSignals#finding-signals","content":" If you've selected the Create a desktop shortcut option during setup, you can find a shortcut to sudoSignals on your desktop. You can also find Signals in the start menu.  sudoSignals also includes a system tray icon. When sudoSignals is running you should see a system tray icon.   ","version":"Next","tagName":"h2"},{"title":"Logs","type":0,"sectionRef":"#","url":"/v2/getting-started/machine-view/logs","content":"","keywords":"","version":"Next"},{"title":"Log Formatting‚Äã","type":1,"pageTitle":"Logs","url":"/v2/getting-started/machine-view/logs#log-formatting","content":" Log messages are formatted as: {log icon} {time-stamp} | {log-level} | {reporting-process} | {log message}    danger The current character limit for logs is 255.  ","version":"Next","tagName":"h2"},{"title":"Log Duration & Download‚Äã","type":1,"pageTitle":"Logs","url":"/v2/getting-started/machine-view/logs#log-duration--download","content":" The log section header includes two buttons: Duration and Download Logs.  The Duration dropdown allows you to select a window of time to view reports:  10 Minutes1 Hour1 Day1 Week    The Download Logs button opens a dialog that allows you to download reports for the machine:   ","version":"Next","tagName":"h2"},{"title":"Service API","type":0,"sectionRef":"#","url":"/v2/api/service-api","content":"","keywords":"","version":"Next"},{"title":"Service Connections‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#service-connections","content":" A plugin can connect to the sudoSignals client via a websocket connection on port 57002. Once connected the API will allow you to integrate with the sudoSignals dashboard.  danger For security of your project and processes, only plugin connections from the local machine will be accepted.  ","version":"Next","tagName":"h2"},{"title":"Packet Structure‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#packet-structure","content":" Websocket messages are sent as text formatted with JSON. They will follow this structure:  { &quot;action&quot;: &lt;string&gt;, // Action type &quot;data&quot;: &lt;map&gt;, // Data relating to that action (report metrics, controls, etc) &quot;identifier&quot;: &lt;string&gt;\t// Identifying the process sending the packet. }   ","version":"Next","tagName":"h2"},{"title":"Actions‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#actions","content":" sudoSignals defines a number of different actions that can be used in communication between the Plugin and the Service.  Action\tDescriptorStart\tSent by Signals Service on connection to confirm connection is open. identify\tSent by Plugin to give information about process and identify connections for monitoring. report\tSent by Plugin to update reports in dashboard. log\tSent by Plugin to log a message in the dashboard. control-Set\tSent by Plugin to update current state of controls that are available for remote control. control-Update\tSent by Signals Service to update controls to a new state.  ","version":"Next","tagName":"h2"},{"title":"Packets‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#packets","content":" ","version":"Next","tagName":"h2"},{"title":"Start‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#start","content":" When the socket connection opens, the server sends an immediate &quot;Start&quot; packet to confirm the connection is open. This packets will look like the following:  { &quot;action&quot;: &quot;Start&quot;, &quot;data&quot;: {}, &quot;identifier&quot;: &quot;system&quot; }   The local client will always be identified as system.    ","version":"Next","tagName":"h3"},{"title":"identify‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#identify","content":" In order to register your plugin within the sudoSignals Service, you must first identify the connection by sending the unique process id, software name, and software version:  { &quot;action&quot;: &quot;identify&quot;, &quot;data&quot;: { &quot;software&quot;: &quot;TouchDesigner&quot;, &quot;version&quot;: &quot;099 21000&quot; }, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }   tip The unique system id can be found in the configuration file or as an environment variable specified when the process was started called &quot;SIGNALS_ID&quot;.    ","version":"Next","tagName":"h3"},{"title":"report‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#report","content":" This sends the current state of any values from your plugin you would like logged and available later. &lt;ReportMap&gt; structure is defined below.  { &quot;action&quot;: &quot;report&quot;, &quot;data&quot;: &lt;ReportMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }   tip You can send this message to the client as often as you would like however it is rate limited from the client to the dashboard.    ","version":"Next","tagName":"h3"},{"title":"log‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#log","content":" This sends a log message from your plugin that you would like to see in the dashboard. &lt;LogMap&gt; structure is defined below.  { &quot;action&quot;: &quot;log&quot;, &quot;data&quot;: &lt;LogMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }   info Log messages are limited in length to 256 characters. You can send this message to the client as often as you would like however it is rate limited from the client to the dashboard. Timing is maintained by the client and will be reported based on your system clock.    ","version":"Next","tagName":"h3"},{"title":"control-Set‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#control-set","content":" This sends the current state of controls that are available for remote control. &lt;ControlMap&gt; structure is defined below.  { &quot;action&quot;: &quot;control-Set&quot;, &quot;data&quot;: &lt;ControlMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }     ","version":"Next","tagName":"h3"},{"title":"control-Update‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#control-update","content":" This is a packet that can be received from the sudoSignals Service. This packet should set the controls in your plugin to the state defined in the packet. &lt;ControlMap&gt; structure is defined below.  { &quot;action&quot;: &quot;control-Update&quot;, &quot;data&quot;: &lt;ControlMap&gt;, &quot;identifier&quot;: &quot;SIGNALS ID HERE&quot; }     ","version":"Next","tagName":"h3"},{"title":"Map Definitions‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#map-definitions","content":" ","version":"Next","tagName":"h2"},{"title":"Report Map‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#report-map","content":" \t{ &quot;kpis&quot;: [ //Array of all reportable values { &quot;label&quot;\t: &lt;string&gt;, // required &quot;value&quot;\t: &lt;Number&gt;, // required } ] }     ","version":"Next","tagName":"h3"},{"title":"Log Map‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#log-map","content":" \t{ &quot;logLevel&quot;\t: &lt;int&gt;, // required - 0=info, 1=warn, 2=critical &quot;message&quot;\t: &lt;string&gt; // required - the message you would like logged }   info Log messages are limited in length to 256 characters.    ","version":"Next","tagName":"h3"},{"title":"Control Map‚Äã","type":1,"pageTitle":"Service API","url":"/v2/api/service-api#control-map","content":" \t{ &quot;state&quot;: [ { &quot;name&quot;: &lt;string&gt;, // Page Name - this corresponds to tabs on the dashboard. &quot;pars&quot;: [ // list of pars that are contained in that tab. { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;any&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;\t// optional } ] } ] }   Supported Control Styles‚Äã  Style\tDescriptor\tControl TypeInt\tInteger\tsimple Float\tFloat\tsimple Str\tString\tsimple Toggle\tToggle\tsimple Pulse\tPulse\tsimple Menu\tMenu\tcomplex StrMenu\tStrMenu\tcomplex RGB\tColor with no Alpha\tcomplex RGBA\tColor with Alpha\tcomplex XY\tXY\tcomplex XYZ\tXYZ\tcomplex UV\tUV\tcomplex UVW\tUVW\tcomplex WH\tWH\tcomplex  info Control styles were developed using TouchDesigner as a prototyping platform. If you would like to see any additional control types added to this list submit a RFE at https://github.com/SudoMagicCode/SudoSignals/discussions  Additional Control Properties for Complex Styles‚Äã  Menu and StrMenu‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;menuNames&quot; :\t[&lt;string&gt;], // Required for Menu and StrMenu &quot;menuLabels&quot;\t: [&lt;string&gt;], // Required for Menu and StrMenu }   RGB and RGBA‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// Red Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Green Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Blue Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Alpha Component if RGBA &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }   XY and XYZ‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// X Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Y Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// Z Component if XYZ &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }   UV and UVW‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// U Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// V Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// W Component if UVW &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;float&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }   WH‚Äã  { &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional &quot;group&quot; :\ttrue, //\trequired &quot;pars&quot; : [ {\t// W Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;int&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional }, {\t// H Component &quot;inGroup&quot; : true, //\trequired &quot;name&quot; : &lt;string&gt;, //\trequired &quot;label&quot; : &lt;string&gt;, //\trequired &quot;style&quot; : &lt;string&gt;, //\trequired &quot;currentValue&quot;\t: &lt;int&gt;, //\trequired &quot;index&quot; : &lt;int&gt;, //\toptional &quot;path&quot; : &lt;string&gt;, // optional } ] }  ","version":"Next","tagName":"h3"},{"title":"Reports","type":0,"sectionRef":"#","url":"/v2/getting-started/machine-view/reports","content":"","keywords":"","version":"Next"},{"title":"Machine Reports‚Äã","type":1,"pageTitle":"Reports","url":"/v2/getting-started/machine-view/reports#machine-reports","content":" The machine reports section shows graphs for this machine. Hovering over a line on the graph shows the corresponding machine and statistic.  Additionally, the section header includes two buttons: Duration and Download Reports.  The Duration dropdown allows you to select a window of time to view reports:  10 Minutes1 Hour1 Day1 Week    The Download Reports button opens a dialog that allows you to download reports for:    ","version":"Next","tagName":"h2"},{"title":"Process Reports‚Äã","type":1,"pageTitle":"Reports","url":"/v2/getting-started/machine-view/reports#process-reports","content":" Process reports has everything from machine reports, except it is focused on processes not machines. additionally, this section a dropdown button for Process Selection.    ","version":"Next","tagName":"h2"},{"title":"Downloads‚Äã","type":1,"pageTitle":"Reports","url":"/v2/getting-started/machine-view/reports#downloads","content":" Logs and Reports from your installation can be downloaded for your offline review. These logs can be especially useful if you want to review data that exists outside of the graphed view on the dashboard. Note that this data is formatted as JSON.  ","version":"Next","tagName":"h2"},{"title":"","type":1,"pageTitle":"Reports","url":"/v2/getting-started/machine-view/reports##","content":"","version":"Next","tagName":"h2"},{"title":"Machine Settings","type":0,"sectionRef":"#","url":"/v2/getting-started/machine-view/machine-settings","content":"Machine Settings At the top right of the installation view, you can find the gear icon. Clicking on the icon opens the Installation Settings dialog. On this dialog, there's the ability to edit the: Machine Name Recommended to be a descriptive name for the machine. Machine Profile The active Profile set on that machine. Editing Profiles In order to edit which processes a Profile will start, open the sudoSignals Client on the machine and navigate to the Configuration tab. On the Configuration tab you can edit the profile, add/remove processes, adjust how many times each process should be restarted, etc.","keywords":"","version":"Next"},{"title":"Overview","type":0,"sectionRef":"#","url":"/v2/getting-started/machine-view/overview","content":"","keywords":"","version":"Next"},{"title":"Processes‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/machine-view/overview#processes","content":" This section shows a list of all the processes that are communicating with the sudoSignals client on your installation machine.  ","version":"Next","tagName":"h2"},{"title":"Stop/Start Processes‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/machine-view/overview#stopstart-processes","content":" The Start All Processes and Stop All Processes buttons can be used to start or stop all Processes that sudoSignals is configured to Auto Start. This gives you the ability to remotely startup or shutdown the applications that are controlled by sudoSignals    ","version":"Next","tagName":"h3"},{"title":"Process Cards‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/machine-view/overview#process-cards","content":" Each process is represented as a small rectangular tile below the Start and Stop buttons. Process cards shows the following:  StatusSoftwareFile NameUptime  Additionally, on process cards there is a menu indicator that opens a dropdown to view Process Details, and start/stop or restart processes on the machine.  ","version":"Next","tagName":"h3"},{"title":"Process Details‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/machine-view/overview#process-details","content":" Clicking on Process Details shows a dialog with an in-depth look at the process.    This dialog includes the following information about the process:  Process NameProcess IDProfileFile NameSoftwareSoftware VersionWorking DirectoryRestart BehaviorEnvironment VariablesUptime  ","version":"Next","tagName":"h3"},{"title":"Controls‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/machine-view/overview#controls","content":" Controls for a given process are in the central section of this view. Click on a process in the Processes tab to view controls for that specific process. To edit which controls are promoted to the Installation View see    ","version":"Next","tagName":"h2"},{"title":"Graphs and Reports‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/machine-view/overview#graphs-and-reports","content":" On the right are graphed reports from your machine. Key performance indicators (KPIs) are available at both the Machine and Process level. By default, the KPIs for your machine will be displayed. These metrics are polled directly from the operating system. These graphs give you a quick view of your systems performance over time - allowing you to monitor your machine's performance remotely.    On the top of the graphs, you can toggle either Machine or Process graphs. Each process can also send metrics back to Signals to be displayed in this graph view. The data used for graphs is available for download from the Reports tab. ","version":"Next","tagName":"h2"},{"title":"Alerts","type":0,"sectionRef":"#","url":"/v2/getting-started/view-installations/alerts","content":"","keywords":"","version":"Next"},{"title":"Installation Alerts‚Äã","type":1,"pageTitle":"Alerts","url":"/v2/getting-started/view-installations/alerts#installation-alerts","content":" Signals can be configured to send an alert for:  All Machines Machines Processes All Processes Specific Processes Log Alerts  Note that when installation, machine or process going offline may be due to a power outage, a computer restart, or an interruption in internet connectivity.    info When sudoSignals is set to Auto Restart your process, it will restart your application even if it crashes. When process alerts are enabled, you may still get a notification that your process has fallen offline so that you can investigate at your earliest convenience.  ","version":"Next","tagName":"h2"},{"title":"Alert Settings‚Äã","type":1,"pageTitle":"Alerts","url":"/v2/getting-started/view-installations/alerts#alert-settings","content":" In the Alert settings, there is the ability to mute notifications for a fixed duration of time.   ","version":"Next","tagName":"h2"},{"title":"Reports","type":0,"sectionRef":"#","url":"/v2/getting-started/view-installations/reports","content":"","keywords":"","version":"Next"},{"title":"Machine Reports‚Äã","type":1,"pageTitle":"Reports","url":"/v2/getting-started/view-installations/reports#machine-reports","content":" The machine reports section shows graphs for all of the machines in the installation. Hovering over a line on the graph shows the corresponding machine and statistic.  Additionally, the section header includes two buttons: Duration and Download Reports.  The Duration dropdown allows you to select a window of time to view reports:  10 Minutes1 Hour1 Day1 Week    The Download Reports button opens a dialog that allows you to download reports for:    Depending on the length of reports, it may take a few minutes to receive the reports via email.   ","version":"Next","tagName":"h2"},{"title":"System Info","type":0,"sectionRef":"#","url":"/v2/getting-started/machine-view/sys-info","content":"","keywords":"","version":"Next"},{"title":"Machine Details‚Äã","type":1,"pageTitle":"System Info","url":"/v2/getting-started/machine-view/sys-info#machine-details","content":" Machine name, uptime, and last updated gives an at-a-glance view of the hardware you're monitoring. Uptime provides critical information on time since the last Windows restart. Last Updated is the time stamp since the last heartbeat from the sudoSignals client to the web Dashboard.    caution If you ever experience issues with your installation, the support team at sudoSignals may ask you to provide information about the Installation Id, Client Version, or Client Id for better troubleshooting.  ","version":"Next","tagName":"h2"},{"title":"Hardware Details‚Äã","type":1,"pageTitle":"System Info","url":"/v2/getting-started/machine-view/sys-info#hardware-details","content":" Hardware details provides vital insight into your local hardware. These details are reported directly from Windows hardware discovery. Below are the 5 categories for hardware details  GPU InformationCPU InformationMemory InformationDrive InformationNetwork Information ","version":"Next","tagName":"h2"},{"title":"Logs","type":0,"sectionRef":"#","url":"/v2/getting-started/view-installations/logs","content":"","keywords":"","version":"Next"},{"title":"Log Formatting‚Äã","type":1,"pageTitle":"Logs","url":"/v2/getting-started/view-installations/logs#log-formatting","content":" Log messages are formatted as: {log icon} {time-stamp} | {log-level} | {reporting-process} | {log message}    danger The current character limit for logs is 255.  ","version":"Next","tagName":"h2"},{"title":"Log Duration & Download‚Äã","type":1,"pageTitle":"Logs","url":"/v2/getting-started/view-installations/logs#log-duration--download","content":" The log section header includes two buttons: Duration and Download Logs.  The Duration dropdown allows you to select a window of time to view reports:  10 Minutes1 Hour1 Day1 Week    The Download Logs button opens a dialog that allows you to download logs:   ","version":"Next","tagName":"h2"},{"title":"System Info","type":0,"sectionRef":"#","url":"/v2/getting-started/view-installations/sys-info","content":"","keywords":"","version":"Next"},{"title":"Process Details‚Äã","type":1,"pageTitle":"System Info","url":"/v2/getting-started/view-installations/sys-info#process-details","content":" Each process card has a menu that shows a dropdown with Process Details, as well as the ability to start/stop that specific process.    ","version":"Next","tagName":"h2"},{"title":"Process Details Dialog‚Äã","type":1,"pageTitle":"System Info","url":"/v2/getting-started/view-installations/sys-info#process-details-dialog","content":" Clicking on Process Details shows a dialog with an in-depth look at the process.    This dialog includes the following information about the process:  Process NameProcess IDProfileFile NameSoftwareSoftware VersionWorking DirectoryRestart BehaviorEnvironment VariablesUptime ","version":"Next","tagName":"h3"},{"title":"Plugins","type":0,"sectionRef":"#","url":"/v2/plugins","content":"Plugins Plugins are used to communicate between Signals and an application. They allow you to remotely control your installations and to send data to and from the Dashboard. The SudoMagic team has some open source plugins that are officially supported. If you're interested in contributing a plugin for official support please contact us by visiting this page. üóÉÔ∏è TouchDesigner 3 items üóÉÔ∏è NodeJS 2 items","keywords":"","version":"Next"},{"title":"Overview","type":0,"sectionRef":"#","url":"/v2/getting-started/view-installations/overview","content":"","keywords":"","version":"Next"},{"title":"Machines‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/view-installations/overview#machines","content":" This section shows a list of all machines inside of this installation, the ability to add machines, along with the ability to start/stop all processes.  ","version":"Next","tagName":"h2"},{"title":"Add Machines‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/view-installations/overview#add-machines","content":"   ","version":"Next","tagName":"h3"},{"title":"Stop/Start Processes‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/view-installations/overview#stopstart-processes","content":" The Stop All Processes and Start All Processes buttons can be used to start or stop all processes that sudoSignals is configured to Auto Start. This gives you the ability to remotely startup or shutdown the applications that are controlled by sudoSignals.    ","version":"Next","tagName":"h3"},{"title":"Machine Cards‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/view-installations/overview#machine-cards","content":" Machine cards shows the following:  StatusProfileProcesses  Additionally, on the machine cards there is a menu indicator that opens a dropdown to adjust Machine Settings, start/stop processes on that specific machine, and delete the machine.  ","version":"Next","tagName":"h3"},{"title":"Controls‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/view-installations/overview#controls","content":" Controls can be accessed by using one of the SudoMagic developed plugins, or by building your own controls by following the sudoSignals client API. Depending on the environment, the SudoMagic plugins are intended to be drag and drop solutions for fast integration with the sudoSignals dashboard.  The TouchDesigner plugin, for example, lets you quickly mirror your controls from your TouchDesigner project in a web friendly format. Control schemas are pre-defined, and allow for your development team to focus on building compelling experiences rather than creating overly complex dashboard controls.    ","version":"Next","tagName":"h2"},{"title":"Reports‚Äã","type":1,"pageTitle":"Overview","url":"/v2/getting-started/view-installations/overview#reports","content":" On the right are graphed reports from your installation. Key performance indicators (KPIs) are available at both the Machine and Process level. By default, the KPIs for your machine will be displayed. These metrics are polled directly from the operating system. These graphs give you a quick view of your systems performance over time - allowing you to monitor your machine's performance remotely. ","version":"Next","tagName":"h2"},{"title":"NodeJS","type":0,"sectionRef":"#","url":"/v2/plugins/NodeJS","content":"NodeJS IN PROGRESS This plugin is still in development during Beta Early Access. This plugin operates by communicating to the sudoSignals local service installed on your machine. For more information on how to install check out the getting started instructions. To getting started using NodeJS and learn more about developing NodeJS apps check out https://nodejs.dev/learn To install the sudoSignals plugin into your nodeJS project use the following: npm i sudosignals_nodeplugin You can then bring the sudoSignals code into your project with the following: //require the signals plugin var SignalsPlugin = require('sudosignals_nodeplugin').SignalsPlugin //Insert Process id from process configuration page in dashboard const PROCESS_ID = &quot;PROCESS_ID_HERE&quot; //Create plugin. var myPlugin = new SignalsPlugin(id=PROCESS_ID, onStart=()=&gt;{ console.log('Plugin has connected to signals service.') }) üìÑÔ∏è Getting Started An overview of NodeJS for sudoSignals üìÑÔ∏è Logging, Reporting, and Controls To unlock more advanced features of sudoSignals in a NodeJS app we have to add a few more elements.","keywords":"","version":"Next"},{"title":"TouchDesigner","type":0,"sectionRef":"#","url":"/v2/plugins/TouchDesigner","content":"TouchDesigner Getting started with remote control for a TouchDesigner project is easy. Before we look at configuring our TouchDesigner project, first make sure that you have followed all of the instructions for getting your sudoSignals client installed and configured. IN PROGRESS This video is still getting updated for Beta Early Access. TouchDesigner is a visual development platform that equips you with the tools you need to create stunning realtime projects and rich user experiences. Whether you're creating interactive media systems, architectural projections, live music visuals, or simply rapid-prototyping your latest creative impulse, TouchDesigner is the platform that can do it all. You can learn more about TouchDesigner here ‚Äî TouchDesigner TouchDesigner Version The current sudoSignals plugin is has been updated to use some of the latest features in TouchDesigner 2023 builds. We recommend using 2023.12230 or later when using the sudoSignals TouchDesigner plugin üìÑÔ∏è Getting Started Setting up remote operation of your TouchDesigner network with the sudoSignals plugin üìÑÔ∏è Manual Configuration Manually configuring the TouchDesigner plugin üìÑÔ∏è TouchDesigner Plugin API TouchDesigner Plugin API","keywords":"","version":"Next"},{"title":"Manual Configuration","type":0,"sectionRef":"#","url":"/v2/plugins/TouchDesigner/manual-config","content":"","keywords":"","version":"Next"},{"title":"Process Configuration‚Äã","type":1,"pageTitle":"Manual Configuration","url":"/v2/plugins/TouchDesigner/manual-config#process-configuration","content":" Configuring the sudoSignals client is an important first step in the manual configuration process. On the Configure Process page take note of your Process ID this will be an essential identifier when setting-up the TouchDesigner Plugin to work with Signals.    info For manual plugin configurations, the Auto Start parameter should be toggled off. In these cases, we expect Signals to be running inside of another TouchDesigner process either as an Engine, or in an embedded TOX. In either of those cases, Signals would no longer be used to start and stop your project, only for controls  ","version":"Next","tagName":"h2"},{"title":"Configuring the Plugin in TouchDesigner‚Äã","type":1,"pageTitle":"Manual Configuration","url":"/v2/plugins/TouchDesigner/manual-config#configuring-the-plugin-in-touchdesigner","content":" danger We have not yet started testing manual configuration for the TouchDesigner plugin for V2 - please know that this will behave inconsistently  Drag and drop the sudoSignals TOX into your network.    On the Advanced Settings page toggle on the Manual Configuration parameter:    With Manual Configuration toggled on, head back to the Settings page. On the settings page enter the Process ID from the Configure Process page.  Next head back to the Advanced Settings page and click on Reset Connection to restart the connection between TouchDesigner and sudoSignals.  info You only have to reset your connection the first time you set-up Signals. From now when TouchDesigner starts Signals will reach out and attempt to connect with Signals so it can act as a relay to your Dashboard. ","version":"Next","tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/v2/plugins/NodeJS/getting-started","content":"Getting Started IN PROGRESS This plugin is still in development during Beta Early Access. To install NodeJS and learn more about developing NodeJS apps check out https://nodejs.dev/learn To install the sudoSignals plugin into your nodeJS project use the following: npm i sudosignals_nodeplugin You can then bring the sudoSignals code into your project with the following: //require the signals plugin var SignalsPlugin = require('sudosignals_nodeplugin').SignalsPlugin //Insert Process id from process configuration page in dashboard const PROCESS_ID = &quot;PROCESS_ID_HERE&quot; //Create plugin. var myPlugin = new SignalsPlugin(id=PROCESS_ID, onStart=()=&gt;{ console.log('Plugin has connected to signals service.') }) ","keywords":"","version":"Next"},{"title":"Remote Control","type":0,"sectionRef":"#","url":"/v2/remote-control","content":"Remote Control In addition to process monitoring, sudoSignals can also be used to remotely control your application. Remote operation requires that an application use a plugin to communicate directly with the Signals client, which will act as a bridge to the Dashboard. SudoMagic has a starting set of open source plugins available for projects, with plans to continue development for additional platforms. You can see a list of all officially supported plugins here. If you'd like to build your own plugin please review the documentation for the sudoSignals service API. üìÑÔ∏è Machine Controls More about using machine controls üìÑÔ∏è Promoted Controls More about using promoted controls üìÑÔ∏è Installation Controls More about using installation controls","keywords":"","version":"Next"},{"title":"Logging, Reporting, and Controls","type":0,"sectionRef":"#","url":"/v2/plugins/NodeJS/Node-remote-conrol","content":"","keywords":"","version":"Next"},{"title":"1. Creating Logs‚Äã","type":1,"pageTitle":"Logging, Reporting, and Controls","url":"/v2/plugins/NodeJS/Node-remote-conrol#1-creating-logs","content":" Reports are one of the ways sudoSignals enables you to monitor whats happening in your installation. Here's how we set them up with the nodeJS plugin:  //require the signals plugin var SignalsPlugin = require('sudosignals_nodeplugin').SignalsPlugin //Insert Process id from process configuration page in dashboard const PROCESS_ID = &quot;PROCESS_ID_HERE&quot; //Create plugin. var myPlugin = new SignalsPlugin(id=PROCESS_ID, onStart=()=&gt;{ console.log('Plugin has connected to signals service.') myPlugin.Log(&quot;Hello sudoSignals!&quot;, logLevel=0) // logs a &quot;INFO&quot; message myPlugin.Log(&quot;Uh Oh sudoSignals!&quot;, logLevel=1) // logs a &quot;WARN&quot; message myPlugin.Log(&quot;sudoSignals, we have a problem...&quot;, logLevel=2) // logs a &quot;CRIT&quot; message })   ","version":"Next","tagName":"h2"},{"title":"2. Creating Reports‚Äã","type":1,"pageTitle":"Logging, Reporting, and Controls","url":"/v2/plugins/NodeJS/Node-remote-conrol#2-creating-reports","content":" Reports are one of the ways sudoSignals enables you to monitor whats happening in your installation. Here's how we set them up with the nodeJS plugin:  // Create a report definition. var Report1Definition = { label: &quot;My Report&quot;, value: 0, // value should always be a number. } // Add the report to plugin var Report1 = myPlugin.AddReport(Report1Definition) // Update the report value in your code regularly. setInterval(()=&gt;{ // Set value of report. /* Note - updates are pulled from the client and may not update as quickly as you set them */ Report1.SetValue(Report1.value+1) }, 3000)   ","version":"Next","tagName":"h2"},{"title":"3. Creating Controls‚Äã","type":1,"pageTitle":"Logging, Reporting, and Controls","url":"/v2/plugins/NodeJS/Node-remote-conrol#3-creating-controls","content":" Controls are a great way of controlling your project when you can't physically access the systems its on. There are many types of supported controls. Here is how to create them:  //Create a control definition /* Styles currently supported by sudoSignals: - Int - Float - Str - Menu - RGB - RGBA - XY - XYZ - UV - UVW - WH */ var Control1Definition = { name: &quot;MyInt&quot;, label: &quot;My Int&quot;, style: &quot;Int&quot;, } //Add control to plugin var Control1 = myPlugin.AddControl(Control1Definition) //Create a function to handle updates to the control const updateFunction = (control, currentValue)=&gt;{ console.log(control.label+' update!') console.log(&quot;Current value is:&quot;, currentValue) } //Set up control listener Control1.on(&quot;control-Update&quot;, updateFunction)  ","version":"Next","tagName":"h2"},{"title":"TouchDesigner Signals Plugin API","type":0,"sectionRef":"#","url":"/v2/plugins/TouchDesigner/plugin-api","content":"","keywords":"","version":"Next"},{"title":"Operator Access‚Äã","type":1,"pageTitle":"TouchDesigner Signals Plugin API","url":"/v2/plugins/TouchDesigner/plugin-api#operator-access","content":" Any given project should only contain one sudoSignals TOX, for that reason we have assigned a Global OP shortcut for this TOX SudoSignals. You can access this operator from anywhere in your TouchDesigner network by using:  op.SudoSignals   ","version":"Next","tagName":"h2"},{"title":"Logging‚Äã","type":1,"pageTitle":"TouchDesigner Signals Plugin API","url":"/v2/plugins/TouchDesigner/plugin-api#logging","content":" While you can generate logs by changing the contents of a log table, you may also find that it's easier to create log events by accessing Python extension for the sudoSignals TOX. The log method can be accessed by using Send_log() on the Signals TOX.  op.SudoSignals.Send_log(logLevel:str, message:str)   Log Level\tDescriptorLOG\tMarked as LOG, useful for any logged data that has carries no warning. INFO\tMarked as INFO, useful for any logged operation that provides direct information about a process or behavior. WARN\tmarked as WARNING, this is useful for operations that require some user intervention. CRIT\tMarked as CRITICAL, this is useful for any operations that may cause system instability. ALERT\tMarked as ALERT, this log type will generate an Alert. If you have signals configured to send email or SMS messages this will forward the contents of your alert to the selected notification medium.  Your message should be a string less than 256 characters in length.  Example usage:  op.SudoSignals(&quot;WARN&quot;, &quot;Eep - something has gone wrong, check all the bananas&quot;)  ","version":"Next","tagName":"h2"},{"title":"Installation Controls","type":0,"sectionRef":"#","url":"/v2/remote-control/installation-controls","content":"Installation Controls Installation controls include Promoted Controls from machines. These controls are seperated by machines; expand and collapse to sections to see each corresponding machine's controls.","keywords":"","version":"Next"},{"title":"Machine Controls","type":0,"sectionRef":"#","url":"/v2/remote-control/machine-controls","content":"Machine Controls Machine controls can be accessed by using one of the SudoMagic developed plugins, or by building your own controls by following the sudoSignals client API. Depending on the environment, the SudoMagic plugins are intended to be drag and drop solutions for fast integration with the sudoSignals dashboard. The TouchDesigner plugin, for example, lets you quickly mirror your controls from your TouchDesigner project in a web friendly format. Control schemas are pre-defined, and allow for your development team to focus on building compelling experiences rather than creating overly complex dashboard controls.","keywords":"","version":"Next"},{"title":"Promoted Controls","type":0,"sectionRef":"#","url":"/v2/remote-control/promoted-controls","content":"Promoted Controls Promoted controls are controls that are &quot;promoted&quot; from a machine to its installation. In order to access promoted controls, first navigate to the machine. Next, locate the controls section in the center of the Overview tab and click on the Edit icon in the top right corner of that section. Once clicked, you are now able to promote controls by checking or unchecking the controls you would like to view on your installation. Back on the installation, you should now see the controls you promoted. In order to edit those controls, Edit them back on the corresponding machine.","keywords":"","version":"Next"},{"title":"Troubleshooting","type":0,"sectionRef":"#","url":"/v2/troubleshooting","content":"Troubleshooting Welcome to the sudoSignals troubleshooting resources. Here you'll find common issues, and how to resolve them. üìÑÔ∏è Glossary A collection of the terminology that's used when describing sudoSignals. üìÑÔ∏è sudoSignals Config File Working with a YAML file for configuration. üìÑÔ∏è Installation Location Where sudoSignals is typically installed on a computer. üìÑÔ∏è Config Files &amp; Client Logs Where are my user config files located on my computer? üìÑÔ∏è Known Issues Known issues for sudoSignals","keywords":"","version":"Next"},{"title":"Config Files & Client Logs","type":0,"sectionRef":"#","url":"/v2/troubleshooting/config-and-logs","content":"Config Files &amp; Client Logs Where are my user config files located on my computer? User config files are located alongside the sudosignals.exe application on your server. For most users that directory path will look like: C:\\Program Files (x86)\\sudoSignals\\config Does the locally running client produce any log files? Yes! sudoSignals does produce log files. These are located alongside the sudosignals.exe application on your server. For most users that directory path with be: C:\\Program Files (x86)\\sudoSignals\\logs A typical log file should look something like this: INFO: 2023/03/26 20:25:50 ---------- Logging initialized ----------- INFO: 2023/03/26 20:25:50 VERSION: v1.0.5 INFO: 2023/03/26 20:25:50 connected to starter WARN: 2023/03/26 20:25:50 Config file version mismatch: Attempting Update. INFO: 2023/03/26 20:25:50 loading configuration from config/default.yaml INFO: 2023/03/26 20:25:50 No Client ID found, waiting for updates... INFO: 2023/03/26 20:25:50 listening for configuration connections on 57001 INFO: 2023/03/26 20:37:14 service updated INFO: 2023/03/26 20:37:14 service restart ","keywords":"","version":"Next"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/v2/plugins/TouchDesigner/getting-started","content":"","keywords":"","version":"Next"},{"title":"Download the Plugin‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#download-the-plugin","content":" The Signals plugin can be downloaded from the GitHub latest release. Optionally, you can download a specific release by looking through all of our plugin releases here GitHub all releases. Please make sure to use a release that's at least version v2.0.0 or greater. Download the asset called package.zip.  ","version":"Next","tagName":"h2"},{"title":"Extract‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#extract","content":" When you extract package.zip you'll see a directory called sudoSignals, in that director you'll find the sudoSignals.tox file that you can add to your project.  ","version":"Next","tagName":"h2"},{"title":"Configure sudoSignals to launch a Process‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#configure-sudosignals-to-launch-a-process","content":" Configure sudoSignals to open your project file. If you don't have a project handy, you can set sudoSignals open blank TouchDesigner project. If you need a quick reminder about how to configure sudoSignals to open a process, review the Configure a Process page.  ","version":"Next","tagName":"h2"},{"title":"Add the sudoSignals TOX‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#add-the-sudosignals-tox","content":" Next, drop the sudoSignals TOX you downloaded into your project.    After dropping the plugin into TouchDesigner you should see some additional information on your dashboard. Your process button should change from red to green, and we should now see controls that are available from our TouchDesigner process.    caution If your project is not yet connected to Signals your controls and communication to the dashboard won't show up until you restart your project.  ","version":"Next","tagName":"h2"},{"title":"Remove the External file Path‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#remove-the-external-file-path","content":" TouchDesigner has updated it's mechanics for handling external TOX files, if you drag and drop from your computer into your TOE file this will automatically fill in the external tox parameter on your component. If you don't intended on loading the sudoSignals plugin from disk, be sure to clear this parameter in TouchDesigner.  ","version":"Next","tagName":"h3"},{"title":"Save your Project file‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#save-your-project-file","content":" Save your project file on your computer. This will make sure that the sudoSignals TouchDesigner plugin is saved in your project.  ","version":"Next","tagName":"h2"},{"title":"Check your Installation‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#check-your-installation","content":" Once the plugin has been added to your project, you should now see some additional metrics for your installation.  Notice that in the center column of the Dashboard there is information about your controlled processes. This displays the assigned Signals Name along with the software, filename and project uptime.  ","version":"Next","tagName":"h2"},{"title":"Controls‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#controls","content":" The TouchDesigner Plugin supports controlling parameters in TouchDesigner remotely from the dashboard. This is handled by pointing the sudoSignals plugin to an operator with custom parameters.  A default operator with custom parameters is provided to help you get started.  Setting your control comp To set your own controls, simply drag and drop an operator with custom parameters onto the sudoSignals TOX's parameter for Control Comp. Adding additional control handles is as easy as customizing the Comp and adding more controls.    You should see that these same parameters and page names are reflected on the Dashboard:    info Controls for the sudoSignals plugin work both directions. Updating a custom parameter in TouchDesigner will be reflected on the cloud Dashboard, and changes on the Dashboard will push to the controlled TouchDesigner process.  ","version":"Next","tagName":"h3"},{"title":"Custom Reports and KPIs‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#custom-reports-and-kpis","content":" In addition to custom controls, the sudoSignals plugin also supports sending custom reports and KPIs to the Dashboard. You'll see a custom parameter called Custom Reports on the plugin.  On the dashboard, you'll see a toggle for Process reports - this will toggle the graphed view to the reports from your process.    A default operator with custom reports is provided to help you get started.  caution Currently only numerical values are supported by the graphing tool kit in use. To ensure correct formatting for your reports make sure your table is formatted as two columns with labels in column 0 and values in column 1. Your table should not include a header.    KPIs are sent to the Signals service at a regular interval ‚Äî these are then forwarded to the cloud. These reports can be seen in the graphs section of the Installation view by selecting the Process option from the drop down menu.  ","version":"Next","tagName":"h3"},{"title":"Logs‚Äã","type":1,"pageTitle":"Getting Started","url":"/v2/plugins/TouchDesigner/getting-started#logs","content":" In addition to reports, the TouchDesigner sudoSignals plugin has an example configuration for how to send log messages to your dashboard.  A default operator with custom reports is provided to help you get started.    Log messages from your process can be found on the logs tab in the dashboard.    Alternatively, you can use the Plug's API to call for log messages by directly interacting with the TOX. To see more about accessing the Python extension for this component click here ","version":"Next","tagName":"h3"},{"title":"Signals Config File","type":0,"sectionRef":"#","url":"/v2/troubleshooting/config-file","content":"Signals Config File Signals' operation is described by a YAML file. For a typical installation type, you can locate your config file in: C:\\Program Files (x86)\\sudoSignals\\config If your config file becomes corrupt, you can replace its contents with the following: # sudoSignals configuration file. # only directly edit this file if you know what you are doing. # editing properties in this file can lead to issues monitoring # and controlling your installations. # # To safely configure sudoSignals, right click on the sudoSignals # systey tray icon and select &quot;Configure&quot;. version: v1.0.5 installation: clientid: &quot;&quot; productid: &quot;&quot; startup: processes: [] tip Advanced users can choose to edit their YAML manually. Additionally, if you're configuring a large number of servers you may consider using a script to create your configuration files.","keywords":"","version":"Next"},{"title":"Glossary","type":0,"sectionRef":"#","url":"/v2/troubleshooting/glossary","content":"Glossary Term\tDefinitionaccount type\tYour sudoSignals account type describes the tier and features you can access on your web dashboard: free, basic, standard or enterprise. auto- start\tsudoSignals tracks to see if your target application is running and can be configured to keep the application running if it unexpectedly quits. card\tThe at-a-glance representation of an installation on the web dashboard. client\tThe sudoSignals application that runs on a machine in a venue. This application will broker communication between your local processes and the sudoSingals web dashboard. controlled process\tA process that you intend to control remotely with a sudoSignals plugin. custom controls\tCustom controls are defined at the process level, and allow for bidirectional communication between the web dashboard and the local process. Custom controls mirror state on your local machine to the web dashboard. Controls follow a API specification which allows sudoSignals to generate a user interface without the requirement for custom development. drive monitoring\tThe capability of the local sudoSignals client to monitor the drive status of your installation machine. On Windows OS, sudoSignals uses a system library to communicate key statistics about your local server with the cloud. environment variable\tAn environment variable is a dynamic-named value that can affect the way running processes will behave on a computer. Environment variables are part of the environment in which a process runs. See more on Wikipedia. graph\tThe 2D line graph of data presented in the dashboard view of an installation. Data from ‚Äòreports‚Äô is the only data that can be displayed in a graph on the sudoSignals dashboard. heartbeat monitoring\tThe sudoSignals client communicates with a heartbeat style mechanic, which looks for communication from your local server at a regular interval. If the web dashboard misses consecutive heartbeats it will notify you that your process or installation has gone offline. installation\tA computer resource you wish to monitor and control. logs\tString messages communicated from a local process to the sudoSignals web dashboard. Logs are intended as messages you wish you communicate from a process to the web dashboard. Logs are composed of both a log level and a message. The log level is represented as an integer value of 0, 1, or 2. This corresponds to a log level of Info Warning, and Critical. Log messages can be a maximum of 255 characters notifications\tEmail or SMS messages sent when sudoSignals detects a notification event. Currently supported events include: a process going offline (e.g. quitting unexpectedly), or an installation going offline. plugin\tThe generalized framework developed for a specialized environment - i.e. the sudoSignals TouchDesigner plugin. Plugins allow local processes to communicate with the sudoSignals client. product-id\tThe internal ID used by sudoSignals to associate a user with installations. This is unique to the installation that sudoSignals is controlling. process\tAn application you wish to control or monitor with sudoSignals. sudoSignals can send control messages to a process that has a supported plugin. reports\tKey-value pairs that are sent from controlled processes to the web dashboard. This data can be graphed and downloaded from the dashboard. Report keys should be constructed as strings, and values as numbers. Reports are intended to be graphed on the sudoSignals web dashboard and are displayed in the order they are received. signals-id\tA generated ID used by sudoSignals to communicate with your local processes. This is unique to the process that sudoSignals is controlling. signals-name\tThe user generated name that is attached to a process running on your installation machine. saved states\tThe state of all custom controls for a given process at a given moment in time. The complete collection of custom controls are saved at the process level in a ‚Äòstate‚Äô. States allow a user to recall a process's custom controls at a given moment. In other applications this may be referred to as a preset. web dashboard\tThe sudoSignals website where a user can access the status or control parameters for their installations.","keywords":"","version":"Next"},{"title":"Installation Location","type":0,"sectionRef":"#","url":"/v2/troubleshooting/installation-location","content":"","keywords":"","version":"Next"},{"title":"Quit Signals and any controlled process‚Äã","type":1,"pageTitle":"Installation Location","url":"/v2/troubleshooting/installation-location#quit-signals-and-any-controlled-process","content":" Quit sudoSignals from the tray icon and close any open sudoSignals monitored process.    ","version":"Next","tagName":"h2"},{"title":"Open a new terminal window‚Äã","type":1,"pageTitle":"Installation Location","url":"/v2/troubleshooting/installation-location#open-a-new-terminal-window","content":" In a new terminal window move to the installation directory for sudoSignals.  cd &quot;C:\\Program Files (x86)\\sudoSignals&quot;    ","version":"Next","tagName":"h2"},{"title":"Use the --console flag‚Äã","type":1,"pageTitle":"Installation Location","url":"/v2/troubleshooting/installation-location#use-the---console-flag","content":" Start sudoSignals with the --console flag.  sudosignals.exe --console    ","version":"Next","tagName":"h2"},{"title":"Watch messages in the sudoSignals console‚Äã","type":1,"pageTitle":"Installation Location","url":"/v2/troubleshooting/installation-location#watch-messages-in-the-sudosignals-console","content":" This will launch the sudoSignals client with an open console that displays any logged messages.    ","version":"Next","tagName":"h2"},{"title":"Return to typical use‚Äã","type":1,"pageTitle":"Installation Location","url":"/v2/troubleshooting/installation-location#return-to-typical-use","content":" To close the console version of sudoSignals, quit sudoSignals from the tray icon.   ","version":"Next","tagName":"h2"},{"title":"Known Issues","type":0,"sectionRef":"#","url":"/v2/troubleshooting/known-issues","content":"","keywords":"","version":"Next"},{"title":"Sleep‚Äã","type":1,"pageTitle":"Known Issues","url":"/v2/troubleshooting/known-issues#sleep","content":" sudoSignals may experiences connection issues when recovering from sleep or hibernation. When working on an installation we typically aim to control the power state of the machine directly, and always recommend that others do the same. You can review the process for here for adjusting Windows Sleep Settings. ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}