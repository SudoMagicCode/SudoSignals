"use strict";(self.webpackChunksudoSignalsDocs=self.webpackChunksudoSignalsDocs||[]).push([[2003],{5295:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"v1/plugins/nodeJS/nodeRemoteControl","title":"Logging, Reporting, and Controls","description":"To unlock more advanced features of sudoSignals in a NodeJS app we have to add a few more elements.  ","source":"@site/docs/v1/plugins/nodeJS/003-nodeRemoteControl.md","sourceDirName":"v1/plugins/nodeJS","slug":"/v1/plugins/NodeJS/Node-remote-conrol","permalink":"/v1/plugins/NodeJS/Node-remote-conrol","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Logging, Reporting, and Controls","slug":"/v1/plugins/NodeJS/Node-remote-conrol","description":"To unlock more advanced features of sudoSignals in a NodeJS app we have to add a few more elements.  "},"sidebar":"v1Sidebar","previous":{"title":"Getting Started","permalink":"/v1/plugins/NodeJS/getting-started"},"next":{"title":"Troubleshooting","permalink":"/v1/troubleshooting"}}');var r=o(4848),a=o(8453);const s={title:"Logging, Reporting, and Controls",slug:"/v1/plugins/NodeJS/Node-remote-conrol",description:"To unlock more advanced features of sudoSignals in a NodeJS app we have to add a few more elements.  "},l="Logging, Reporting, and Controls",i={},d=[{value:"1. Creating Logs",id:"1-creating-logs",level:2},{value:"2. Creating Reports",id:"2-creating-reports",level:2},{value:"3. Creating Controls",id:"3-creating-controls",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"logging-reporting-and-controls",children:"Logging, Reporting, and Controls"})}),"\n",(0,r.jsx)(n.p,{children:"To unlock more advanced features of sudoSignals in a NodeJS app we have to add a few more elements."}),"\n",(0,r.jsx)(n.h2,{id:"1-creating-logs",children:"1. Creating Logs"}),"\n",(0,r.jsx)(n.p,{children:"Reports are one of the ways sudoSignals enables you to monitor whats happening in your installation. Here's how we set them up with the nodeJS plugin:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'//require the signals plugin \nvar SignalsPlugin = require(\'sudosignals_nodeplugin\').SignalsPlugin\n\n//Insert Process id from process configuration page in dashboard\nconst PROCESS_ID = "PROCESS_ID_HERE"\n\n//Create plugin.\nvar myPlugin = new SignalsPlugin(id=PROCESS_ID, onStart=()=>{\n\tconsole.log(\'Plugin has connected to signals service.\')\n\tmyPlugin.Log("Hello sudoSignals!", logLevel=0) \t\t\t// logs a "INFO" message\n\tmyPlugin.Log("Uh Oh sudoSignals!", logLevel=1) \t\t\t// logs a "WARN" message\n\tmyPlugin.Log("sudoSignals, we have a problem...", logLevel=2) \t// logs a "CRIT" message\n})\n'})}),"\n",(0,r.jsx)(n.h2,{id:"2-creating-reports",children:"2. Creating Reports"}),"\n",(0,r.jsx)(n.p,{children:"Reports are one of the ways sudoSignals enables you to monitor whats happening in your installation. Here's how we set them up with the nodeJS plugin:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Create a report definition.\nvar Report1Definition = {\n\tlabel: "My Report",\n\tvalue: 0, // value should always be a number.\n}\n\n// Add the report to plugin\nvar Report1 = myPlugin.AddReport(Report1Definition)\n\n// Update the report value in your code regularly.\nsetInterval(()=>{\n\t// Set value of report.\n\t/* \n\t\tNote - updates are pulled from the client and may not update as\n\t\tquickly as you set them\n\t*/ \n\tReport1.SetValue(Report1.value+1)\n}, 3000)\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"3-creating-controls",children:"3. Creating Controls"}),"\n",(0,r.jsx)(n.p,{children:"Controls are a great way of controlling your project when you can't physically access the systems its on. There are many types of supported controls. Here is how to create them:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'//Create a control definition\n/*\nStyles currently supported by sudoSignals:\n - Int\n - Float\n - Str\t\n - Menu\n - RGB\n - RGBA \n - XY\n - XYZ\n - UV\n - UVW\n - WH\n*/\nvar Control1Definition = {\n\tname: "MyInt",\n\tlabel: "My Int",\n\tstyle: "Int",\n}\n\n//Add control to plugin\nvar Control1 = myPlugin.AddControl(Control1Definition)\n\n//Create a function to handle updates to the control\nconst updateFunction = (control, currentValue)=>{\n\tconsole.log(control.label+\' update!\')\n\tconsole.log("Current value is:", currentValue)\n}\n\n//Set up control listener\nControl1.on("control-Update", updateFunction)\n'})})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var t=o(6540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);