"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[218],{2846:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(5893),s=n(1151),i=n(2461);const o={title:"API",sidebar_position:5,slug:"/api",description:"Plugin API reference docs"},c="Plugin API",l={id:"api/api",title:"API",description:"Plugin API reference docs",source:"@site/docs/api/api.mdx",sourceDirName:"api",slug:"/api",permalink:"/api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"API",sidebar_position:5,slug:"/api",description:"Plugin API reference docs"},sidebar:"tutorialSidebar",previous:{title:"Known Issues",permalink:"/troubleshooting/known-issues"},next:{title:"Service API",permalink:"/api/service-api"}},a={},u=[];function d(e){const t={h1:"h1",hr:"hr",img:"img",p:"p",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"plugin-api",children:"Plugin API"}),"\n",(0,r.jsx)(t.p,{children:"Plugins use an API for communicating with the local sudoSignals client. While there are some existing plugins for sudoSignals, you're welcome to develop your own tools to better suite your organizations' needs."}),"\n",(0,r.jsx)(t.p,{children:"sudoSignals has an open websocket API for controlling and reporting on process behavior. The local sudoSignals client is responsible for starting processes on the local server, reporting system diagnostic information, and relaying information and control settings between the dashboard and the plugins embedded in the monitored processes."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"sudoSignals Plugin Flow",src:n(4358).Z+"",width:"1001",height:"481"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(i.Z,{})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},2461:(e,t,n)=>{n.d(t,{Z:()=>I});var r=n(7294),s=n(6905),i=n(3734),o=n(4791),c=n(9962);const l=["zero","one","two","few","many","other"];function a(e){return l.filter((t=>e.includes(t)))}const u={locale:"en",pluralForms:a(["one","other"]),select:e=>1===e?"one":"other"};function d(){const{i18n:{currentLocale:e}}=(0,c.Z)();return(0,r.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:a(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),u}}),[e])}function p(){const e=d();return{selectMessage:(t,n)=>function(e,t,n){const r=e.split("|");if(1===r.length)return r[0];r.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);const s=n.select(t),i=n.pluralForms.indexOf(s);return r[Math.min(i,r.length-1)]}(n,t,e)}}var m=n(2735),h=n(7325),g=n(3899);const f={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var x=n(5893);function b(e){let{href:t,children:n}=e;return(0,x.jsx)(o.Z,{href:t,className:(0,s.Z)("card padding--lg",f.cardContainer),children:n})}function j(e){let{href:t,icon:n,title:r,description:i}=e;return(0,x.jsxs)(b,{href:t,children:[(0,x.jsxs)(g.Z,{as:"h2",className:(0,s.Z)("text--truncate",f.cardTitle),title:r,children:[n," ",r]}),i&&(0,x.jsx)("p",{className:(0,s.Z)("text--truncate",f.cardDescription),title:i,children:i})]})}function P(e){let{item:t}=e;const n=(0,i.LM)(t),r=function(){const{selectMessage:e}=p();return t=>e(t,(0,h.I)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return n?(0,x.jsx)(j,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??r(t.items.length)}):null}function w(e){let{item:t}=e;const n=(0,m.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",r=(0,i.xz)(t.docId??void 0);return(0,x.jsx)(j,{href:t.href,icon:n,title:t.label,description:t.description??r?.description})}function y(e){let{item:t}=e;switch(t.type){case"link":return(0,x.jsx)(w,{item:t});case"category":return(0,x.jsx)(P,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function v(e){let{className:t}=e;const n=(0,i.jA)();return(0,x.jsx)(I,{items:n.items,className:t})}function I(e){const{items:t,className:n}=e;if(!t)return(0,x.jsx)(v,{...e});const r=(0,i.MN)(t);return(0,x.jsx)("section",{className:(0,s.Z)("row",n),children:r.map(((e,t)=>(0,x.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,x.jsx)(y,{item:e})},t)))})}},4358:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/signals-plugin-api-001-13d383512b8f3584062c12b751e3d42b.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>o});var r=n(7294);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);